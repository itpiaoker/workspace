package com.file.dao;

import com.file.model.Fileinfo;
import com.file.model.FileinfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface FileinfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    int countByExample(FileinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    int deleteByExample(FileinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    @Delete({
        "delete from fileinfo",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    @Insert({
        "insert into fileinfo (id, name, ",
        "size, depth, changeDate, ",
        "createDate, ext, ",
        "path, parentPath, ",
        "driver, isNeedCache, ",
        "isNeedIndex)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{size,jdbcType=INTEGER}, #{depth,jdbcType=INTEGER}, #{changedate,jdbcType=VARCHAR}, ",
        "#{createdate,jdbcType=VARCHAR}, #{ext,jdbcType=VARCHAR}, ",
        "#{path,jdbcType=VARCHAR}, #{parentpath,jdbcType=VARCHAR}, ",
        "#{driver,jdbcType=VARCHAR}, #{isneedcache,jdbcType=TINYINT}, ",
        "#{isneedindex,jdbcType=TINYINT})"
    })
    int insert(Fileinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    int insertSelective(Fileinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    List<Fileinfo> selectByExample(FileinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, name, size, depth, changeDate, createDate, ext, path, parentPath, driver, ",
        "isNeedCache, isNeedIndex",
        "from fileinfo",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Fileinfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Fileinfo record, @Param("example") FileinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Fileinfo record, @Param("example") FileinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Fileinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fileinfo
     *
     * @mbggenerated
     */
    @Update({
        "update fileinfo",
        "set name = #{name,jdbcType=VARCHAR},",
          "size = #{size,jdbcType=INTEGER},",
          "depth = #{depth,jdbcType=INTEGER},",
          "changeDate = #{changedate,jdbcType=VARCHAR},",
          "createDate = #{createdate,jdbcType=VARCHAR},",
          "ext = #{ext,jdbcType=VARCHAR},",
          "path = #{path,jdbcType=VARCHAR},",
          "parentPath = #{parentpath,jdbcType=VARCHAR},",
          "driver = #{driver,jdbcType=VARCHAR},",
          "isNeedCache = #{isneedcache,jdbcType=TINYINT},",
          "isNeedIndex = #{isneedindex,jdbcType=TINYINT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Fileinfo record);
    
    
    @Select({
        "select count(id) from fileinfo"
    })
    int totalNumber();
    
}