{"version":3,"sources":["filters/filters.js"],"names":["app","filter","type","toUpperCase","status"],"mappings":"AAAA;;AAEAA,IAAIC,OAAO,kBAAkB,YAAY;IACrC,OAAO,UAAUC,MAAM;QACnB,QAAQA;YACJ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAOA,KAAKC;;;GAGzBF,OAAO,oBAAoB,YAAY;IACtC,OAAO,UAAUC,MAAM;QACnB,QAAQA;YACJ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAOA,KAAKC;;;GAGzBF,OAAO,mBAAmB,YAAY;IACrC,OAAO,UAAUC,MAAM;QACnB,QAAQA;YACJ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAOA,KAAKC;;;GAGzBF,OAAO,kBAAkB,YAAY;IACpC,OAAO,UAAUC,MAAM;QACnB,QAAQA;YACJ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAOA,KAAKC;;;GAGzBF,OAAO,kBAAkB,YAAY;IACpC,OAAO,UAAUC,MAAM;QACnB,QAAQA;YACJ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAOA,KAAKC;;;GAGzBF,OAAO,cAAc,YAAY;IAChC,OAAO,UAAUG,QAAQ;QACrB,QAAQA;YACJ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAO;;;GAjIvB","file":"filters.js","sourcesContent":["'use strict';\r\n\r\napp.filter('ParserTypeName', function () {\r\n    return function (type) {\r\n        switch (type) {\r\n            case 'nothing':\r\n                return '不解析';\r\n            case 'cef':\r\n                return 'CEF';\r\n            case 'delimit':\r\n                return '分隔符';\r\n            case 'delimitWithKeyMap':\r\n                return '键值对';\r\n            case 'xml':\r\n                return 'XML';\r\n            case 'json':\r\n                return 'JSON';\r\n            case 'regex':\r\n                return '正则';\r\n            case 'transfer':\r\n                return '传输';\r\n            default:\r\n                return type.toUpperCase();\r\n        }\r\n    };\r\n}).filter('AnalyzerTypeName', function () {\r\n    return function (type) {\r\n        switch (type) {\r\n            case 'sql':\r\n                return 'SQL';\r\n            case 'model':\r\n                return '生产模型';\r\n            case 'analyzer':\r\n                return '数据分析';\r\n            default:\r\n                return type.toUpperCase();\r\n        }\r\n    };\r\n}).filter('channelTypeName', function () {\r\n    return function (type) {\r\n        switch (type) {\r\n            case 'parser':\r\n                return '数据解析';\r\n            case 'analyzer':\r\n                return '数据分析';\r\n            default:\r\n                return type.toUpperCase();\r\n        }\r\n    };\r\n}).filter('SourceTypeName', function () {\r\n    return function (type) {\r\n        switch (type) {\r\n            case 'es2':\r\n                return 'ELASTICSEARCH-2.X';\r\n            case 'es5':\r\n                return 'ELASTICSEARCH-5.X';\r\n            case 'es':\r\n                return 'ELASTICSEARCH';\r\n            case 'net':\r\n                return '网络';\r\n            case 'single-table':\r\n                return '通道转数据表';\r\n            case 'tuple':\r\n                return '通道组合';\r\n            case 'jdbc':\r\n                return '数据库';\r\n            case 'forward':\r\n                return '数据转发';\r\n            case 'file':\r\n                return '本地文件';\r\n            case 'switch':\r\n                return '条件输出';\r\n            default:\r\n                return type.toUpperCase();\r\n        }\r\n    };\r\n}).filter('writerTypeName', function () {\r\n    return function (type) {\r\n        switch (type) {\r\n            case 'es2':\r\n                return 'ELASTICSEARCH-2.X';\r\n            case 'es5':\r\n                return 'ELASTICSEARCH-5.X';\r\n            case 'es':\r\n                return 'ELASTICSEARCH';\r\n            case 'net':\r\n                return '网络';\r\n            case 'jdbc':\r\n                return '数据库';\r\n            case 'forward':\r\n                return '数据转发';\r\n            case 'file':\r\n                return '本地文件';\r\n            case 'switch':\r\n                return '条件输出';\r\n            default:\r\n                return type.toUpperCase();\r\n        }\r\n    };\r\n}).filter('StatusName', function () {\r\n    return function (status) {\r\n        switch (status) {\r\n            case 'RUNNING':\r\n                return '运行';\r\n            case 'STOPPING':\r\n                return '正在停止';\r\n            case 'STOPPED':\r\n                return '停止';\r\n            case 'READING_ERROR':\r\n                return '读取数据异常';\r\n            case 'WRITER_ERROR':\r\n                return '写数据异常';\r\n            case 'MONITOR_ERROR':\r\n                return '停止【创建输入流异常】';\r\n            case 'LEXER_ERROR':\r\n                return '数据分析异常';\r\n            case 'WORKER_STOPPED':\r\n                return '采集器已关闭,或者不存在';\r\n            case 'UNAVAILABLE':\r\n                return '采集器已关闭,或者不存在';\r\n            case 'PENDING':\r\n                return '初始状态';\r\n            case 'STARTING':\r\n                return '正在启动';\r\n            case 'FINISHED':\r\n                return '完成';\r\n            case 'NOT_EXEC':\r\n                return '未执行';\r\n            case 'FAIL':\r\n                return '失败';\r\n            default:\r\n                return '未知';\r\n        }\r\n    };\r\n});\r\n"]}