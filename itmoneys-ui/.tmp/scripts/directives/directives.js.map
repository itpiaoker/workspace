{"version":3,"sources":["directives/directives.js"],"names":["app","directive","$location","$route","restrict","link","$scope","element","attrs","href","ngHref","attr","click","substring","path","reload","$parse","scope","model","fileModel","modelSetter","assign","bind","$apply","files","fileModel2","console","log","$","fileinput","language","allowedFileExtensions","dropZoneEnabled","width","height","margin","data","controller","$element","$attrs","TimeSeriesChart","chart","getChart","render","SparkLineChart","replace","template","ele","page","start","limit","current","count","total","search","order","orderBy","method","Error","first","load","prev","next","check","last","to","list","$promise","then","totalCount","Math","ceil","pages"],"mappings":"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","file":"directives.js","sourcesContent":["'use strict';\r\n/**\r\n * a标签二次点击刷新路由\r\n * 指令:reload-when-click,必须指定 ng-href 或者 href 属性\r\n * 用例:<a ng-href=\\'#/action\\' reload-when-click>action</>\r\n */\r\napp.directive('reloadWhenClick', ['$location', '$route',\r\n    function ($location, $route) {\r\n        return {\r\n            restrict: 'A',\r\n            link: function ($scope, element, attrs) {\r\n                let href = attrs.ngHref || element.attr('href');\r\n                element.click(function () {\r\n                    if (href.substring(2) == $location.path()) {\r\n                        $route.reload();\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n]);\r\n\r\n\r\napp.directive('fileModel', ['$parse', function ($parse) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs) {\r\n            let model = $parse(attrs.fileModel);\r\n            let modelSetter = model.assign;\r\n\r\n            element.bind('change', function () {\r\n                scope.$apply(function () {\r\n                    modelSetter(scope, element[0].files[0]);\r\n                });\r\n            });\r\n        }\r\n    };\r\n}]);\r\napp.directive('fileModel2', ['$parse', function ($parse) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs) {\r\n            let model = $parse(attrs.fileModel2);\r\n            let modelSetter = model.assign;\r\n\r\n            element.bind('change', function () {\r\n                // let file = $scope.myFile2;\r\n                // let reader = new FileReader();\r\n                // reader.onload = function () {\r\n                //     var timer = angular.fromJson(this.result);\r\n                //     console.log(timer);\r\n                //     $edit_table.slideDown();\r\n                //     $search_table.slideUp();\r\n                //     upload_table.slideUp();\r\n                //     $scope.$apply();\r\n                // };\r\n                // reader.readAsText(this);\r\n\r\n\r\n\r\n                // console.log(element)\r\n                // console.log(attrs)\r\n                scope.$apply(function () {\r\n                    modelSetter(scope, element[0].files[0]);\r\n                    console.log(modelSetter)\r\n                });\r\n            });\r\n        }\r\n    };\r\n}]);\r\napp.directive('fileInput', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs) {\r\n            $(element).fileinput({\r\n                'showUpload': false,\r\n                'previewFileType': 'text',\r\n                language: 'zh', //设置语言\r\n                allowedFileExtensions: ['json', 'txt'],//接收的文件后缀\r\n                dropZoneEnabled: true,//是否显示拖拽区域\r\n\r\n            });\r\n        }\r\n    };\r\n});\r\napp.directive('fileInput2', function () {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs) {\r\n            $(element).fileinput({\r\n                'showUpload': false,\r\n                'previewFileType': 'text',\r\n                language: 'zh', //设置语言\r\n                allowedFileExtensions: ['json', 'txt'],//接收的文件后缀\r\n                dropZoneEnabled: true,//是否显示拖拽区域\r\n\r\n            });\r\n        }\r\n    };\r\n});\r\napp.directive('chart', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            width: '@',\r\n            height: '@',\r\n            margin: '@',\r\n            data: '='\r\n        },\r\n        controller: function ($scope, $element, $attrs, TimeSeriesChart) {\r\n            let chart = TimeSeriesChart.getChart($element[0], {\r\n                width: $scope.width,\r\n                height: $scope.height,\r\n                margin: $scope.margin\r\n            });\r\n            chart.render($scope.data);\r\n        }\r\n    };\r\n});\r\napp.directive('sparkLine', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            width: '@',\r\n            height: '@',\r\n            data: '='\r\n        },\r\n        controller: function ($scope, $element, $attrs, SparkLineChart) {\r\n            let chart = SparkLineChart.getChart($element[0], {\r\n                width: $scope.width,\r\n                height: $scope.height,\r\n            });\r\n            chart.render($scope.data);\r\n        }\r\n    };\r\n});\r\n\r\napp.directive('page', [function () {\r\n    return {\r\n        replace: true,\r\n        template: '<div class=\\'hla-widget-foot\\'>\\\r\n            <ul class=\\'pagination pagination-top\\'>\\\r\n                <li>\\\r\n                    <span class=\\'bor-none pad-0\\'>每页显示 \\\r\n                        <select ng-model=\\'page.limit\\' ng-change=\\'load()\\' ng-blur=\\'first()\\' ng-options=\\'x for x in [10,20,50]\\'></select>\\\r\n                    </span>\\\r\n                </li>\\\r\n                <li ng-if=\\'page.current<=1\\' class=\\'disabled\\'><span class=\\'op_prev bor-r-5\\'><i class=\\'glyphicon glyphicon-chevron-left\\'></i></span></li>\\\r\n                <li ng-if=\\'page.current>1\\'><span class=\\'op_prev bor-r-5\\' style=\\'cursor:pointer;\\' ng-click=\\'prev()\\'><i class=\\'glyphicon glyphicon-chevron-left\\'></i></span></li>\\\r\n                <li><span class=\\'op_page_info pad-5 bor-none\\'>{{page.current}}/{{page.total}}</span></li>\\\r\n                <li ng-if=\\'page.current>=page.total\\' class=\\'disabled\\'><span class=\\'op_next bor-r-5\\'><i class=\\'glyphicon glyphicon-chevron-right\\'></i></span></li>\\\r\n                <li ng-if=\\'page.current<page.total\\'><span class=\\'op_next bor-r-5\\' style=\\'cursor:pointer;\\' ng-click=\\'next()\\'><i class=\\'glyphicon glyphicon-chevron-right\\'></i></span></li>\\\r\n            </ul>\\\r\n            <ul class=\\'pagination pagination-bottom\\'>\\\r\n                <li>显示第 {{page.start+1}} 到 {{(page.start+page.limit) < page.count? (page.start+page.limit):page.count}} 条数据 , 共 {{page.count}} 项</li>\\\r\n            </ul>\\\r\n        </div>',\r\n        link: function (scope, ele, attrs) {\r\n\r\n            scope.page = {\r\n                start: 0,\r\n                limit: 10,\r\n                current: 1,\r\n                count: 0,\r\n                total: 1,\r\n                search: {},\r\n                order: 'desc',\r\n                orderBy: 'create_time'\r\n            };\r\n            if (!scope[attrs.method]) {\r\n                throw new Error('load method is undefined');\r\n            }\r\n            scope.first = function () {\r\n                scope.page.start = 0;\r\n                scope.page.current = 1;\r\n                scope.load();\r\n            };\r\n            scope.prev = function () {\r\n                if (scope.page.current > 1) {\r\n                    scope.page.current--;\r\n                    scope.page.start -= scope.page.limit;\r\n                    scope.load();\r\n                }\r\n            };\r\n            scope.next = function () {\r\n                if (scope.page.current < scope.page.total) {\r\n                    scope.page.start += scope.page.limit;\r\n                    scope.page.current++;\r\n                    scope.load();\r\n                }\r\n            };\r\n            scope.check = function () {\r\n                if (scope.page.current >= scope.page.total) {\r\n                    scope.page.current = scope.page.total;\r\n                    scope.page.start = (scope.page.current - 1) * scope.page.limit;\r\n                } else if (scope.page.current <= 1) {\r\n                    scope.page.current = 1;\r\n                    scope.page.start = 0;\r\n                }\r\n            };\r\n            scope.last = function () {\r\n                scope.page.current = scope.page.total;\r\n                scope.page.start = (scope.page.current - 1) * scope.page.limit;\r\n                scope.load();\r\n            };\r\n            //调用\r\n            scope.load = function (to) {\r\n\r\n\r\n                to && (scope.page.current = to);\r\n\r\n\r\n                scope[attrs.method]();\r\n                scope.list.$promise.then(function (list) {\r\n\r\n                    scope.page.count = list.totalCount;\r\n                    scope.page.total = Math.ceil(list.totalCount / scope.page.limit);\r\n                    if (scope.page.current > 1 && scope.page.current < scope.page.total) {\r\n                        scope.pages = [\r\n                            scope.page.current - 1,\r\n                            scope.page.current,\r\n                            scope.page.current + 1\r\n                        ];\r\n                    } else if (scope.page.current == 1 && scope.page.total > 1) {\r\n                        scope.pages = [\r\n                            scope.page.current,\r\n                            scope.page.current + 1\r\n                        ];\r\n                    } else if (scope.page.current == scope.page.total && scope.page.total > 1) {\r\n                        scope.pages = [\r\n                            scope.page.current - 1,\r\n                            scope.page.current\r\n                        ];\r\n                    }\r\n                });\r\n            };\r\n            scope.load();\r\n        }\r\n    }\r\n}]);\r\n\r\n\r\n"]}