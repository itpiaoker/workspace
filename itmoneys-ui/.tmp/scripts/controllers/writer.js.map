{"version":3,"sources":["controllers/writer.js"],"names":["app","controller","$scope","$rootScope","$location","Util","Writer","Collector","$path","path","bind","encodings","$confirmModal","$","WriterDefault","data","name","number_of_shards","number_of_replicas","cache","date_detection","persisRef","protocol","contentType","authentication","properties","connectTimeout","collectors","query","writers","resetForm","writer","angular","copy","resetFormValidateState","ds_form","changeName","contentTypeChange","syslogFormat","facility","level","priorityType","timestampType","pathContentTypeChange","timestampTypeChange","timestamp","Date","pathTimestampTypeChange","saveWriter","formValid","dataForm","save","rt","message","status","reload","slideUp","changeDBType","type","port","driver","uploadFile","$edit_table","$search_table","upload_table","file","myFile","reader","FileReader","onload","e","fromJson","result","writeType","collectorChange","slideDown","$apply","readAsText","show","clazz","id","searchDataSourceForm","slideToggle","get","ds","delete","deleteId","modal","confirm_yes","find","off","click","list","page","addZkAddress","zookeeperConnect","push","removeZkAddress","index","splice","addKafAddress","kafAddresses","metadataBrokerList","removeKafAddress","addHostPort","hostPort","hostPorts","removeHostPort","addWriter","removeWriter","collector","$resolved","forEach","obj","key","host","caseWriterChange","defaultWriterChange","default","downloadFile","itemId","download","response","fileName","decodeURI","url","URL","createObjectURL","Blob","a","document","createElement","body","appendChild","href","target","remove"],"mappings":"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","file":"writer.js","sourcesContent":["'use strict';\r\n\r\napp.controller('WriterController', function ($scope, $rootScope, $location, Util, Writer, Collector) {\r\n    $rootScope.$path = $location.path.bind($location);\r\n    $scope.encodings = ['UTF-8', 'GBK', 'GB18030', 'GB2312', 'BIG5', 'UNICODE', 'ASCII', 'ISO-8859-1'];\r\n    const $confirmModal = $('#confirmModal');\r\n    const WriterDefault = {\r\n        data: {\r\n            name: 'es5',\r\n            number_of_shards: 5,\r\n            number_of_replicas: 0,\r\n            cache: 1000,\r\n            date_detection: true,\r\n            persisRef: {\r\n                name: 'none'\r\n            },\r\n            protocol: {\r\n                name: 'udp',\r\n            },\r\n            contentType: {\r\n                name: 'json',\r\n                contentType: {\r\n                    name: 'json'\r\n                }\r\n            },\r\n            authentication: 'NONE',\r\n            properties: {\r\n                connectTimeout: '300'\r\n            }\r\n        }\r\n    };\r\n    //采集器\r\n    $scope.collectors = Collector.query();\r\n    $scope.writers = Writer.query();\r\n    //重置表单\r\n    $scope.resetForm = function () {\r\n        $scope.writer = angular.copy(WriterDefault);\r\n        Util.resetFormValidateState($scope.ds_form);\r\n    };\r\n\r\n    $scope.resetForm();\r\n\r\n    $scope.changeName = function () {\r\n        switch ($scope.writer.data.name) {\r\n            case 'hdfs':\r\n                $scope.writer.data.authentication = 'NONE';\r\n            case 'ftp':\r\n            case 'sftp':\r\n\r\n                $scope.writer.data.path = angular.copy({\r\n                    name: 'file',\r\n                    persisRef: {\r\n                        name: 'none'\r\n                    },\r\n                    contentType: {\r\n                        name: 'json',\r\n                        contentType: {\r\n                            name: 'json'\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            default :\r\n                delete $scope.writer.data.path;\r\n\r\n        }\r\n    };\r\n    $scope.contentTypeChange = function () {\r\n        switch ($scope.writer.data.contentType.name) {\r\n            case 'syslog':\r\n                $scope.writer.data.contentType.contentType = angular.copy({name: 'json'});\r\n                $scope.writer.data.contentType.syslogFormat=angular.copy({facility: '0',level:'0',priorityType:\"DATA\",timestampType:\"DATA\"});\r\n                break;\r\n            default :\r\n\r\n\r\n        }\r\n    };\r\n    $scope.pathContentTypeChange = function () {\r\n        switch ($scope.writer.data.path.contentType.name) {\r\n            case 'syslog':\r\n                $scope.writer.data.path.contentType.contentType = angular.copy({name: 'json'});\r\n                $scope.writer.data.path.contentType.syslogFormat=angular.copy({facility: '0',level:'0',priorityType:\"DATA\"});\r\n                break;\r\n            default :\r\n\r\n\r\n        }\r\n    };\r\n\r\n    $scope.timestampTypeChange=function () {\r\n        switch ($scope.writer.data.contentType.syslogFormat.timestampType) {\r\n            case 'VAL':\r\n                $scope.writer.data.contentType.syslogFormat.timestamp = new Date();\r\n                break;\r\n            default :\r\n               delete $scope.writer.data.contentType.syslogFormat.timestamp ;\r\n        }\r\n    }\r\n\r\n    $scope.pathTimestampTypeChange=function () {\r\n        switch ($scope.writer.data.path.contentType.syslogFormat.timestampType) {\r\n            case 'VAL':\r\n                $scope.writer.data.path.contentType.syslogFormat.timestamp = new Date();\r\n                break;\r\n            default :\r\n                delete  $scope.writer.data.path.contentType.syslogFormat.timestamp ;\r\n        }\r\n    }\r\n    //保存\r\n    $scope.saveWriter = function (formValid) {\r\n\r\n        if (!formValid) return false;\r\n        let dataForm = $scope.writer;\r\n        Writer.save(dataForm, function (rt) {\r\n            $scope.message = rt;\r\n            if ($scope.message.status == '200') {\r\n                $scope.reload();\r\n                $('.hla-widget-add-table').slideUp();\r\n            }\r\n        });\r\n\r\n    };\r\n    $scope.changeDBType = function () {\r\n        let type = $scope.writer.data.protocol;\r\n        let port = null;\r\n        switch (type) {\r\n            case 'mysql':\r\n                port = 3306;\r\n                $scope.writer.data.driver = \"com.mysql.jdbc.Driver\"\r\n                break;\r\n            case 'oracle':\r\n                port = 1521;\r\n                $scope.writer.data.driver =  \"oracle.jdbc.driver.OracleDriver\"\r\n                break;\r\n            case 'sqlserver':\r\n                port = 1433;\r\n                $scope.writer.data.driver =  \"com.microsoft.jdbc.sqlserver.SQLServerDriver\"\r\n                break;\r\n            case 'DB2':\r\n                $scope.writer.data.driver =   \"com.ibm.db2.jcc.DB2Driver\"\r\n                port = 50000;\r\n                break;\r\n            case 'sybase':\r\n                port = 5000;\r\n                $scope.writer.data.driver =\"net.sourceforge.jtds.jdbc.Driver\"\r\n                break;\r\n            case 'postgresql':\r\n                $scope.writer.data.driver =\"org.postgresql.Driver\"\r\n                port = 5432;\r\n                break;\r\n            case 'sqlite':\r\n                $scope.writer.data.driver =\"org.sqlite.JDBC\"\r\n                port = 0;\r\n                break;\r\n            case 'derby':\r\n                $scope.writer.data.driver = \"org.apache.derby.jdbc.EmbeddedDriver\"\r\n                port = 1527;\r\n                break;\r\n            case 'phoenix':\r\n                $scope.writer.data.driver = \"org.apache.phoenix.jdbc.PhoenixDriver\"\r\n                port = 2181;\r\n                break;\r\n        }\r\n        $scope.writer.data.port = port;\r\n    };\r\n    $scope.uploadFile = function () {\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        let file = $scope.myFile;\r\n        let reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            $scope.writer = angular.fromJson(this.result);\r\n            //  delete   $scope.writer.id;\r\n            if ($scope.writer.writeType == 'forward')\r\n                $scope.collectorChange();\r\n            $edit_table.slideDown();\r\n            $search_table.slideUp();\r\n            upload_table.slideUp();\r\n            $scope.$apply();\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n    $scope.show = function (clazz, id) {\r\n\r\n        delete $scope.message;\r\n\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n\r\n        Util.resetFormValidateState($scope.ds_form);\r\n        switch (clazz) {\r\n            case 'upload':\r\n                $scope.searchDataSourceForm = {};\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                upload_table.slideDown();\r\n                break;\r\n            case 'search':\r\n                $scope.searchDataSourceForm = {};\r\n                $edit_table.slideUp();\r\n                $search_table.slideToggle();\r\n                upload_table.slideUp();\r\n                break;\r\n            case 'add':\r\n                $edit_table.slideToggle();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                $scope.resetForm();\r\n                break;\r\n            case 'edit':\r\n                Writer.get({\r\n                    id: id\r\n                }, function (ds) {\r\n                    $scope.writer = ds;\r\n                    if ($scope.writer.writeType == 'forward') {\r\n                        $scope.collectorChange();\r\n                    }\r\n                });\r\n                $edit_table.slideDown();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n\r\n                break;\r\n            case 'copy':\r\n                Writer.get({\r\n                    id: id\r\n                }, function (ds) {\r\n                    $scope.writer = ds;\r\n                    $scope.writer.name = $scope.writer.name + '_copy';\r\n                    delete $scope.writer.id;\r\n                    if ($scope.writer.writeType == 'forward')\r\n                        $scope.collectorChange();\r\n                });\r\n                $edit_table.slideDown();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n\r\n                break;\r\n            default:\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n\r\n    //删除按钮\r\n    $scope.delete = function (id) {\r\n        $scope.deleteId = id;\r\n        $confirmModal.modal('show');\r\n    };\r\n    //删除确定\r\n    $scope.confirm_yes = function () {\r\n        Writer.delete({\r\n            id: $scope.deleteId\r\n        }, function (rt) {\r\n            $scope.message = rt;\r\n            $scope.reload();\r\n        });\r\n        $confirmModal.modal('hide');\r\n    };\r\n    $confirmModal.find('.op_yes').off().click(function () {\r\n        $scope.confirm_yes();\r\n    });\r\n    $scope.reload = function () {\r\n\r\n        $scope.list = Writer.get($scope.page);\r\n    };\r\n\r\n    $scope.addZkAddress = function () {\r\n        let zookeeperConnect = $scope.writer.data.zookeeperConnect;\r\n        if (!zookeeperConnect) {\r\n            zookeeperConnect = $scope.writer.data.zookeeperConnect = [];\r\n        }\r\n        zookeeperConnect.push(['', 2181]);\r\n    };\r\n    $scope.removeZkAddress = function (index) {\r\n        $scope.writer.data.zookeeperConnect.splice(index, 1);\r\n    };\r\n    $scope.addKafAddress = function () {\r\n        let kafAddresses = $scope.writer.data.metadataBrokerList;\r\n        if (!kafAddresses) {\r\n            kafAddresses = $scope.writer.data.metadataBrokerList = [];\r\n        }\r\n        kafAddresses.push(['', 9092]);\r\n    };\r\n    $scope.removeKafAddress = function (index) {\r\n        $scope.writer.data.metadataBrokerList.splice(index, 1);\r\n    };\r\n\r\n    $scope.addHostPort = function () {\r\n        let hostPort = $scope.writer.data.hostPorts;\r\n        if (!hostPort) {\r\n            hostPort = $scope.writer.data.hostPorts = [];\r\n        }\r\n        hostPort.push(['', 9300]);\r\n    };\r\n    $scope.removeHostPort = function (index) {\r\n        $scope.writer.data.hostPorts.splice(index, 1);\r\n    };\r\n\r\n    $scope.addWriter = function () {\r\n        let writers = $scope.writer.data.writers;\r\n        if (!writers) {\r\n            writers = $scope.writer.data.writers = [];\r\n        }\r\n        writers.push(['', '']);\r\n    };\r\n    $scope.removeWriter = function (index) {\r\n        $scope.writer.data.writers.splice(index, 1);\r\n    };\r\n    $scope.collectorChange = function () {\r\n\r\n        let data = $scope.writer.data;\r\n        if (data.id) {\r\n            let collector = null;\r\n            if ($scope.collectors.$resolved) {\r\n                angular.forEach($scope.collectors, function (obj, key) {\r\n                    if (obj.id == data.id) {\r\n                        collector = obj;\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (collector) {\r\n                data.host = collector.host;\r\n                data.port = collector.port;\r\n            }\r\n        }\r\n\r\n    };\r\n    $scope.caseWriterChange = function (index) {\r\n\r\n        //console.log($scope.writer.data.writers[index]);\r\n        let id = $scope.writer.data.writers[index][1].id;\r\n        //console.log(id);\r\n        if (id) {\r\n            let writer = null;\r\n            if ($scope.writers.$resolved) {\r\n                angular.forEach($scope.writers, function (obj, key) {\r\n                    if (obj.id == id) {\r\n                        writer = obj.data;\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (writer) {\r\n                $scope.writer.data.writers[index][1] = writer;\r\n                $scope.writer.data.writers[index][1].id = id;\r\n            }\r\n        }\r\n\r\n    };\r\n    $scope.defaultWriterChange = function () {\r\n\r\n\r\n        let id = $scope.writer.data.default.id;\r\n        if (id) {\r\n            let writer = null;\r\n            if ($scope.writers.$resolved) {\r\n                angular.forEach($scope.writers, function (obj, key) {\r\n                    if (obj.id == id) {\r\n                        writer = obj.data;\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (writer) {\r\n                $scope.writer.data.default = writer;\r\n                $scope.writer.data.default.id = id;\r\n            }\r\n        }\r\n\r\n    };\r\n    // 文件下载\r\n    $scope.downloadFile = function (itemId) {\r\n\r\n        //        console.log(sqlItemId);\r\n\r\n        Writer.download({\r\n            id: itemId\r\n        }, function (response) {\r\n            let fileName = '存储配置';\r\n            fileName = decodeURI(fileName);\r\n            let url = URL.createObjectURL(new Blob([response.data]));\r\n            let a = document.createElement('a');\r\n            document.body.appendChild(a); //此处增加了将创建的添加到body当中\r\n            a.href = url;\r\n            a.download = fileName + '-' + itemId + '.json';\r\n            a.target = '_blank';\r\n            a.click();\r\n            a.remove(); //将a标签移除\r\n        }, function (response) {\r\n            //            console.log(response);\r\n        });\r\n    } //\r\n\r\n});\r\n"]}