{"version":3,"sources":["controllers/datasource.js"],"names":["app","controller","$scope","$rootScope","$location","Util","DataSource","Collector","Parser","$path","path","bind","encodings","isHaveThead","$confirmModal","$","days","previewData","collectors","query","parsers","channels","byType","type","dataSourceDefault","properties","polling_ms","timeout_ms","connectTimeout","data","name","contentType","position","skipLine","protocol","cache","codec","metadata","timestamp","authorization","options","chart","height","margin","top","right","bottom","left","x","d","y","useInteractiveGuideline","dispatch","stateChange","e","console","log","changeState","tooltipShow","tooltipHide","xAxis","axisLabel","tickFormat","d3","time","format","Date","yAxis","axisLabelDistance","callback","title","enable","text","subtitle","css","caption","html","preview","valid","datasource","showPreview","resetForm","angular","copy","resetFormValidateState","ds_form","saveDataSource","formValid","dataForm","uri","save","rt","message","status","reload","show","slideUp","deleteHeader","header","pathContentType","uploadFile","$edit_table","$search_table","upload_table","file","myFile","reader","FileReader","onload","fromJson","result","id","datatime","slideDown","$apply","readAsText","clazz","metric_table","slideToggle","trigger","get","ds","fromstart","filter","t","delete","deleteId","modal","confirm_yes","find","off","click","list","page","pages","map","item","addHostPort","listens","hostPorts","push","removeHostPort","index","splice","addHostEncoding","removeHostEncoding","changeDBType","port","drivers","driver","changeDataSourceName","extend","single","host","authentication","category","esType","field","wildcard","on","first","maxOutOfOrderness","fields","second","timeCharacteristic","resolver","timefields","channel","table","downloadFile","itemId","download","response","fileName","decodeURI","url","URL","createObjectURL","Blob","a","document","createElement","body","appendChild","href","target","remove","changeChannel","resolverId","r","ref","shift","parser","changeFieldName","fieldName","fromFields","p","key","addProperty","confirm","ok","cancel","deleteProperty","changeTimeField","timefield","timeField"],"mappings":"AAAA;;AAEAA,IAAIC,WAAW,2GAAwB,UAAUC,QAAQC,YAAYC,WAAWC,MAAMC,YAAYC,WAAWC,QAAQ;IACjHL,WAAWM,QAAQL,UAAUM,KAAKC,KAAKP;IACvCF,OAAOU,YAAY,CAAC,SAAS,OAAO,WAAW,UAAU,QAAQ,WAAW,SAAS;IACrFV,OAAOW,cAAc;IACrB,IAAMC,gBAAgBC,EAAE;IACxB,IAAIC,OAAO,IAAI,KAAK,KAAK;IACzBd,OAAOe,cAAc;;IAErBf,OAAOgB,aAAaX,UAAUY;;IAE9BjB,OAAOkB,UAAUZ,OAAOW;;;IAGxBjB,OAAOmB,WAAWf,WAAWgB,OAAO,EAACC,MAAM;IAC3C,IAAMC,oBAAoB;QACtBC,YAAY;YACRC,YAAY;YACZC,YAAY;YACZC,gBAAgB;;QAEpBC,MAAM;YACFC,MAAM;YACNC,aAAa;gBACTD,MAAM;;YAEVE,UAAU;YACVC,UAAU;YACVC,UAAU;gBACNJ,MAAM;gBACNI,UAAU;oBACNJ,MAAM;;;YAGdK,OAAO;YACPC,OAAO;gBACHN,MAAM;;YAEVO,UAAU;gBACNC,WAAW;;YAEfC,eAAe;YACfd,YAAY;gBACRG,gBAAgB;;;;;IAM5B1B,OAAOsC,UAAU;QACbC,OAAO;YACHlB,MAAM;YACNmB,QAAQ;YACRC,QAAQ;gBACJC,KAAK;gBACLC,OAAO;gBACPC,QAAQ;gBACRC,MAAM;;YAEVC,GAAG,SAAA,EAAUC,GAAG;gBACZ,OAAOA,EAAED;;YAEbE,GAAG,SAAA,EAAUD,GAAG;gBACZ,OAAOA,EAAEC;;YAEbC,yBAAyB;YACzBC,UAAU;gBACNC,aAAa,SAAA,YAAUC,GAAG;oBACtBC,QAAQC,IAAI;;gBAEhBC,aAAa,SAAA,YAAUH,GAAG;oBACtBC,QAAQC,IAAI;;gBAEhBE,aAAa,SAAA,YAAUJ,GAAG;oBACtBC,QAAQC,IAAI;;gBAEhBG,aAAa,SAAA,YAAUL,GAAG;oBACtBC,QAAQC,IAAI;;;YAGpBI,OAAO;gBACHC,WAAW;gBACXC,YAAY,SAAA,WAAUb,GAAG;oBACrB,OAAOc,GAAGC,KAAKC,OAAO,YAAY,IAAIC,KAAKjB;;;YAGnDkB,OAAO;gBACHN,WAAW;gBACXC,YAAY,SAAA,WAAUb,GAAG;oBACrB,OAAOA;;gBAEXmB,mBAAmB,CAAC;;YAExBC,UAAU,SAAA,SAAU5B,OAAO;gBACvBc,QAAQC,IAAI;;;QAGpBc,OAAO;YACHC,QAAQ;YACRC,MAAM;;QAEVC,UAAU;YACNF,QAAQ;YACRC,MAAM;YACNE,KAAK;gBACD,cAAc;gBACd,UAAU;;;QAGlBC,SAAS;YACLC,MAAM;YACNL,QAAQ;YACRG,KAAK;gBACD,cAAc;gBACd,UAAU;;;;;IAMtBxE,OAAO2E,UAAU,UAAUC,OAAO;QAC9BvB,QAAQC,IAAItD,OAAO6E;QACnB,IAAI,CAACD,OAAO;YACR,OAAO;;QAEXxE,WAAWuE,QAAQ3E,OAAO6E,YAAY,UAAUlD,MAAM;YAClD3B,OAAOe,cAAcY;YACrB3B,OAAO8E,cAAc;;;;;IAK7B9E,OAAO+E,YAAY,YAAY;QAC3B/E,OAAO6E,aAAaG,QAAQC,KAAK3D;QACjCnB,KAAK+E,uBAAuBlF,OAAOmF;;IAEvCnF,OAAO+E;;IAEP/E,OAAOoF,iBAAiB,UAAUC,WAAW;QACzC,IAAI,CAACA,WAAW;YACZ,OAAO;;QAEX,IAAIC,WAAWN,QAAQC,KAAKjF,OAAO6E;QACnC,OAAOS,SAAS3D,KAAK4D;;;;QAIrBnF,WAAWoF,KAAKF,UAAU,UAAUG,IAAI;YACpCzF,OAAO0F,UAAUD;YACjB,IAAIzF,OAAO0F,QAAQC,UAAU,OAAO;gBAChC3F,OAAO4F;gBACP5F,OAAO6F;gBACPhF,EAAE,yBAAyBiF;gBAC3B9F,OAAO4F;;;;;IAQnB5F,OAAO+F,eAAe,YAAY;QAC9B,IAAIlE,cAAc7B,OAAO6E,WAAWlD,KAAKE,eAAe7B,OAAO6E,WAAWlD,KAAKE;QAC/E,IAAIA,YAAYlB,gBACXkB,YAAYlB,gBAAgB,QACzBkB,YAAYlB,gBAAgB,SAAS;YACzC,OAAOkB,YAAYmE;;QAEvB,IAAIC,kBAAkBjG,OAAO6E,WAAWlD,KAAKnB,QAAQR,OAAO6E,WAAWlD,KAAKnB,KAAKqB,eAAe7B,OAAO6E,WAAWlD,KAAKnB,KAAKqB;QAC5H,IAAIoE,gBAAgBtF,gBACfsF,gBAAgBtF,gBAAgB,QAC7BsF,gBAAgBtF,gBAAgB,SAAS;YAC7C,OAAOsF,gBAAgBD;;;;IAI/BhG,OAAOkG,aAAa,YAAY;QAC5B,OAAOlG,OAAO0F;QACd,IAAIS,cAActF,EAAE;QACpB,IAAIuF,gBAAgBvF,EAAE;QACtB,IAAIwF,eAAexF,EAAE;QACrB,IAAIyF,OAAOtG,OAAOuG;QAClB,IAAIC,SAAS,IAAIC;QACjBD,OAAOE,SAAU,UAAUJ,MAAM;YAC7B,OAAO,UAAUlD,GAAG;gBAChBpD,OAAO6E,aAAaG,QAAQ2B,SAAS,KAAKC;gBAC1C,OAAO5G,OAAO6E,WAAWgC;gBACzB,OAAO7G,OAAO6E,WAAWc;;gBAEzB,OAAO3F,OAAO6E,WAAWiC;gBACzBX,YAAYY;gBACZX,cAAcN;gBACdO,aAAaP;gBACb,OAAO9F,OAAOuG;gBACdvG,OAAOgH;;;QAGf,IAAI;YACAR,OAAOS,WAAWX;UAEtB,OAAOlD,GAAG;YACNpD,OAAO0F,UAAU;gBACbC,QAAQ;gBACRD,SAAS;;;;IAMrB1F,OAAO6F,OAAO,UAAUqB,OAAOL,IAAI;;QAE/B,IAAIV,cAActF,EAAE;QACpB,IAAIuF,gBAAgBvF,EAAE;QACtB,IAAIwF,eAAexF,EAAE;QACrB,IAAIsG,eAAetG,EAAE;QACrBV,KAAK+E,uBAAuBlF,OAAOmF;QACnCnF,OAAOmB,WAAWf,WAAWgB,OAAO,EAACC,MAAM;QAC3C,QAAQ6F;YACJ,KAAK;gBACD,OAAOlH,OAAO0F;gBACdS,YAAYL;gBACZM,cAAcN;gBACdqB,aAAarB;gBACbO,aAAae;gBACbvG,EAAE,qBAAqBwG,QAAQ;gBAC/B;YACJ,KAAK;gBACD,OAAOrH,OAAO0F;gBACdS,YAAYL;gBACZM,cAAcgB;gBACdD,aAAarB;gBACbO,aAAaP;gBACb;YACJ,KAAK;gBACD,OAAO9F,OAAO0F;gBACdS,YAAYiB;gBACZhB,cAAcN;gBACdqB,aAAarB;gBACbO,aAAaP;gBACb9F,OAAO+E;gBACP;YACJ,KAAK;gBACD,OAAO/E,OAAO0F;gBACdtF,WAAWkH,IAAI;oBACXT,IAAIA;mBACL,UAAUU,IAAI;oBACbvH,OAAO6E,aAAa0C;oBACpB,IAAIvH,OAAO6E,WAAWlD,KAAKJ,cAAcvB,OAAO6E,WAAWlD,KAAKJ,WAAWiG,WAAW;wBAClFxH,OAAO6E,WAAWlD,KAAKJ,WAAWiG,YAAYxH,OAAO6E,WAAWlD,KAAKJ,WAAWiG,YAAYxH,OAAO6E,WAAWlD,KAAKJ,WAAWiG,aAAa,SAAS;;oBAExJxH,OAAOmB,WAAWnB,OAAOmB,SAASsG,OAAO,UAAA,GAAA;wBAAA,OAAKC,EAAEb,OAAOA;;oBACvDR,aAAaP;oBACbK,YAAYY;oBACZI,aAAarB;oBACbM,cAAcN;;;gBAGlB;YACJ,KAAK;gBACD,OAAO9F,OAAO0F;gBACdtF,WAAWkH,IAAI;oBACXT,IAAIA;mBACL,UAAUU,IAAI;oBACbvH,OAAO6E,aAAa0C;oBACpBvH,OAAO6E,WAAWjD,OAAO5B,OAAO6E,WAAWjD,OAAO;oBAClD,OAAO5B,OAAO6E,WAAWgC;oBACzB,OAAO7G,OAAO6E,WAAWc;oBACzB,OAAO3F,OAAO6E,WAAWiC;oBACzBX,YAAYY;oBACZX,cAAcN;oBACdqB,aAAarB;oBACbO,aAAaP;;;gBAGjB;YACJ;gBACIK,YAAYL;gBACZM,cAAcN;gBACdqB,aAAarB;gBACbO,aAAaP;gBACb;;;;;IAMZ9F,OAAO2H,SAAS,UAAUd,IAAI;QAC1B7G,OAAO4H,WAAWf;QAClBjG,cAAciH,MAAM;;;IAGxB7H,OAAO8H,cAAc,YAAY;QAC7B,IAAI3B,cAActF,EAAE;QACpBT,WAAWuH,OAAO;YACdd,IAAI7G,OAAO4H;WACZ,UAAUnC,IAAI;YACbzF,OAAO0F,UAAUD;YACjB,IAAIzF,OAAO0F,QAAQC,UAAU,OAAO;gBAChC3F,OAAO4F;gBACPO,YAAYL;;;QAGpBlF,cAAciH,MAAM;;IAExBjH,cAAcmH,KAAK,WAAWC,MAAMC,MAAM,YAAY;QAClDjI,OAAO8H;;IAEX9H,OAAO4F,SAAS,YAAY;QACxB5F,OAAOkI,OAAO9H,WAAWkH,IAAItH,OAAOmI,MAAM,UAAUC,OAAO;YACvDA,MAAMxB,SAASwB,MAAMxB,OAAOyB,IAAI,UAAUC,MAAM;gBAC5CtI,OAAOmI,KAAK,WAAWnI,OAAOkI,KAAK;gBACnC,OAAOI;;;;IAInBtI,OAAOuI,cAAc,YAAY;QAC7B,IAAIC,UAAUxI,OAAO6E,WAAWlD,KAAK8G;QACrC,IAAI,CAACD,SAAS;YACVA,UAAUxI,OAAO6E,WAAWlD,KAAK8G,YAAY;;;QAGjDD,QAAQE,KAAK,CAAC,IAAI;;IAEtB1I,OAAO2I,iBAAiB,UAAUC,OAAO;QACrC5I,OAAO6E,WAAWlD,KAAK8G,UAAUI,OAAOD,OAAO;;;IAGnD5I,OAAO8I,kBAAkB,YAAY;QACjC,IAAIN,UAAUxI,OAAO6E,WAAWlD,KAAK6G;QACrC,IAAI,CAACA,SAAS;YACVA,UAAUxI,OAAO6E,WAAWlD,KAAK6G,UAAU;;QAE/CA,QAAQE,KAAK,CAAC,IAAI;;IAEtB1I,OAAO+I,qBAAqB,UAAUH,OAAO;QACzC5I,OAAO6E,WAAWlD,KAAK6G,QAAQK,OAAOD,OAAO;;;IAGjD5I,OAAOgJ,eAAe,YAAY;QAC9B,IAAI3H,OAAOrB,OAAO6E,WAAWlD,KAAKK;QAClC,IAAIiH,OAAO;QACXjJ,OAAOkJ,UAAU;QACjB,QAAQ7H;YACJ,KAAK;gBACD4H,OAAO;gBACPjJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChC;YACJ,KAAK;gBACDF,OAAO;gBACPjJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChC;YACJ,KAAK;gBACDF,OAAO;gBACPjJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChC;YACJ,KAAK;gBACDnJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChCF,OAAO;gBACP;YACJ,KAAK;gBACDA,OAAO;gBACPjJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChC;YACJ,KAAK;gBACDnJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChCF,OAAO;gBACP;YACJ,KAAK;gBACDjJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChCF,OAAO;gBACP;YACJ,KAAK;gBACDjJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChCF,OAAO;gBACP;YACJ,KAAK;gBACDjJ,OAAO6E,WAAWlD,KAAKwH,SAAS;gBAChCF,OAAO;gBACP;;QAERjJ,OAAO6E,WAAWlD,KAAKsH,OAAOA;;IAElCjJ,OAAOoJ,uBAAuB,YAAY;QACtC,IAAIxH,OAAO5B,OAAO6E,WAAWlD,KAAKC;QAClC,IAAID,OAAOqD,QAAQqE,OAAOrE,QAAQC,KAAK3D,kBAAkBK,OAAO;YAC5DC,MAAMA;;QAEV5B,OAAOsJ,SAAS;QAChB,IAAI1H,SAAS,QAAQ,QAEhB,IAAIA,SAAS,OAAO;YACrBD,KAAKE,cAAc;YACnBF,KAAK4H,OAAO;YACZ5H,KAAKsH,OAAO;eAEX,IAAIrH,SAAS,SAASA,SAAS,UAAUA,SAAS,QAAQ;YAC3D,IAAIA,SAAS,OAAO;gBAChBD,KAAKsH,OAAO;mBAEX,IAAIrH,SAAS,QAAQ;gBACtBD,KAAKsH,OAAO;mBAEX,IAAIrH,SAAS,QAAQ;gBACtBD,KAAKsH,OAAO;gBACZtH,KAAK6H,iBAAiB;;YAE1B7H,KAAKnB,OAAO;YACZwE,QAAQqE,OAAO1H,KAAKnB,MAAM;gBACtBqB,aAAaF,KAAKE;gBAClBD,MAAM;gBACN6H,UAAU;gBACV3H,UAAUH,KAAKG;gBACfC,UAAUJ,KAAKI;gBACfG,OAAOP,KAAKO;;eAGf,IAAIN,SAAS,SAASA,SAAS,OAAO;YACvCD,KAAKiH,QAAQ;YACbjH,KAAK+H,SAAS;YACd/H,KAAKgI,QAAQ;YACbhI,KAAK8G,YAAY;eAEhB,IAAI7G,QAAQ,SAAS;YACtBD,KAAKiI,WAAW;eAEf,IAAIhI,QAAQ,SAAS;YACtBD,KAAKkI,KAAK;gBACNjI,MAAM;gBACNkI,OAAO;oBACHC,mBAAmB;oBACnBC,QAAQ;;gBAEZC,QAAQ;oBACJF,mBAAmB;oBACnBC,QAAQ;;gBAEZE,oBAAoB;;YAExBlK,OAAOmK,WAAW;gBACdL,OAAO;gBACPG,QAAQ;;YAEZjK,OAAOoK,aAAa;gBAChBN,OAAO;gBACPG,QAAQ;;eAGX,IAAIrI,QAAQ,gBAAgB;YAC7BD,KAAK0I,UAAU;YACf1I,KAAK2I,QAAQ;gBACTJ,oBAAoB;gBACpBH,mBAAmB;gBACnBC,QAAQ;;YAEZhK,OAAOmK,WAAW;gBACdE,SAAS;;YAEbrK,OAAOoK,aAAa;gBAChBC,SAAS;;eAGZ;YACD1I,KAAKA,OAAO;YACZ,OAAOA,KAAKE;YACZ,OAAOF,KAAKJ;YACZ,OAAOI,KAAKG;YACZ,OAAOH,KAAKI;YACZ,OAAOJ,KAAKK;YACZ,OAAOL,KAAKM;;QAEhBjC,OAAO6E,WAAWlD,OAAOA;;;IAG7B3B,OAAOuK,eAAe,UAAUC,QAAQ;;QAEpCpK,WAAWqK,SAAS;YAChB5D,IAAI2D;WACL,UAAUE,UAAU;YACnB,IAAIC,WAAW;YACfA,WAAWC,UAAUD;YACrB,IAAIE,MAAMC,IAAIC,gBAAgB,IAAIC,KAAK,CAACN,SAAS/I;YACjD,IAAIsJ,IAAIC,SAASC,cAAc;YAC/BD,SAASE,KAAKC,YAAYJ;YAC1BA,EAAEK,OAAOT;YACTI,EAAER,WAAWE,WAAW,MAAMH,SAAS;YACvCS,EAAEM,SAAS;YACXN,EAAEhD;YACFgD,EAAEO;WACH,UAAUd,UAAU;;;;;IAK3B1K,OAAOyL,gBAAgB,UAAUnB,OAAO;QACpC,IAAIA,SAAS,WAAW;YACpBtK,OAAO6E,WAAWlD,KAAK2I,MAAMoB,aAAa1L,OAAOmB,SAASsG,OAAO,UAAA,GAAA;gBAAA,OAAKkE,EAAE9E,OAAO7G,OAAO6E,WAAWlD,KAAK2I,OAAOsB;eAAKC,QAAQC;YAC1H9L,OAAOmK,SAASG,SAAStK,OAAOkB,QAAQuG,OAAO,UAAA,GAAA;gBAAA,OAAKkE,EAAE9E,OAAO7G,OAAO6E,WAAWlD,KAAK2I,MAAMoB;eAAYG;eAErG;YACD7L,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAOoB,aAAa1L,OAAOmB,SAASsG,OAAO,UAAA,GAAA;gBAAA,OAAKkE,EAAE9E,OAAO7G,OAAO6E,WAAWlD,KAAK2I,OAAOsB;eAAKC,QAAQC;YAC9H9L,OAAOmK,SAASG,SAAStK,OAAOkB,QAAQuG,OAAO,UAAA,GAAA;gBAAA,OAAKkE,EAAE9E,OAAO7G,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAOoB;eAAYG;;QAE9G7L,OAAOoK,WAAWE,SAAStK,OAAOmK,SAASG,OAAO/I,WAAWkG,OAAO,UAAA,GAAA;YAAA,OAAMkE,EAAEtK,SAAS,cAAcsK,EAAEtK,SAAS;;;;IAGlHrB,OAAO+L,kBAAkB,UAAUzB,OAAO1B,OAAO;QAC7C,IAAIoD,YAAY;QAChB,IAAI1B,SAAS,WAAW;YACpB0B,YAAYhM,OAAO6E,WAAWlD,KAAK2I,MAAM2B,WAAWrD,OAAO;eAE1D;YACDoD,YAAYhM,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAO2B,WAAWrD,OAAO;;QAEnE,IAAI5I,OAAOmK,YAAYnK,OAAOmK,SAASG,UAAUtK,OAAOmK,SAASG,OAAO/I,YAAY;YAChF,IAAI2K,IAAIlM,OAAOmK,SAASG,OAAO/I,WAAWkG,OAAO,UAAA,GAAA;gBAAA,OAAKyE,EAAEC,QAAQH;eAAWH;YAC3E,IAAIK,GAAG;gBACH,IAAI5B,SAAS,WAAW;oBACpBtK,OAAO6E,WAAWlD,KAAK2I,MAAM2B,WAAWrD,OAAO,KAAKsD,EAAE7K;uBAErD;oBACDrB,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAO2B,WAAWrD,OAAO,KAAKsD,EAAE7K;;;;;;;;;;;;;;;;IAgB1ErB,OAAOoM,cAAc,UAAU9B,OAAO;QAClC,IAAIA,SAAS,WAAW;;;;;;;;;;;;;;;;;;;;;;;;YAwBpB,IAAItK,OAAO6E,WAAWlD,KAAK2I,MAAMN,QAAQ;gBACrChK,OAAO6E,WAAWlD,KAAK2I,MAAMN,OAAOtB,KAAK,CAAC,IAAI;mBAE7C;gBACD1I,OAAO6E,WAAWlD,KAAK2I,MAAMN,SAAS;gBACtChK,OAAO6E,WAAWlD,KAAK2I,MAAMN,OAAOtB,KAAK,CAAC,IAAI;;eAGjD;YACD,IAAI1I,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAOoB,YAAY;gBAC7C,IAAI1L,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAON,QAAQ;oBACzChK,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAON,OAAOtB,KAAK,CAAC,IAAI;uBAEjD;oBACD1I,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAON,SAAS;oBAC1ChK,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAON,OAAOtB,KAAK,CAAC,IAAI;;mBAGrD;gBACD1I,OAAOqM,UAAU;oBACbjI,OAAO;oBACPsB,SAAS;oBACT4G,IAAI,SAAA,KAAY;wBACZtM,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAON,OAAOtB,KAAK,CAAC,IAAI;wBAClD7H,EAAE,uBAAuBgH,MAAM;;oBAEnC0E,QAAQ,SAAA,SAAY;wBAChB1L,EAAE,uBAAuBgH,MAAM;;;gBAGvChH,EAAE,uBAAuBgH,MAAM;;;;;;;;IAQ3C7H,OAAOwM,iBAAiB,UAAUlC,OAAO1B,OAAO;QAC5C,IAAI0B,SAAS,WAAW;YACpBtK,OAAO6E,WAAWlD,KAAK2I,MAAMN,OAAOnB,OAAOD,OAAO;eAEjD;YACD5I,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAON,OAAOnB,OAAOD,OAAO;;;IAG9D5I,OAAOyM,kBAAkB,UAAUnC,OAAO;QACtC,IAAItK,OAAOoK,WAAWE,QAAQ;YAC1B,IAAIoC,YAAY;YAChB,IAAIpC,SAAS,WAAW;gBACpBoC,YAAY1M,OAAOoK,WAAWE,OAAO7C,OAAO,UAAA,GAAA;oBAAA,OAAKC,EAAEyE,QAAQnM,OAAO6E,WAAWlD,KAAK2I,MAAMqC;mBAAWd;mBAElG;gBACDa,YAAY1M,OAAOoK,WAAWE,OAAO7C,OAAO,UAAA,GAAA;oBAAA,OAAKC,EAAEyE,QAAQnM,OAAO6E,WAAWlD,KAAKkI,GAAGS,OAAOqC;mBAAWd;;YAE3G,IAAI,CAACa,WAAW;gBACZ1M,OAAO0F,UAAU;oBACbC,QAAQ;oBACRvB,OAAO;oBACPsB,SAAS;;;;;IA3mB7B","file":"datasource.js","sourcesContent":["'use strict';\r\n\r\napp.controller('DataSourceController', function ($scope, $rootScope, $location, Util, DataSource, Collector, Parser) {\r\n    $rootScope.$path = $location.path.bind($location);\r\n    $scope.encodings = ['UTF-8', 'GBK', 'GB18030', 'GB2312', 'BIG5', 'UNICODE', 'ASCII', 'ISO-8859-1'];\r\n    $scope.isHaveThead = true;\r\n    const $confirmModal = $('#confirmModal');\r\n    let days = 1 * 60 * 60 * 1000;\r\n    $scope.previewData = {};\r\n    //采集器\r\n    $scope.collectors = Collector.query();\r\n    //解析规则\r\n    $scope.parsers = Parser.query();\r\n\r\n    //数据通道列表\r\n    $scope.channels = DataSource.byType({type: \"channel\"});\r\n    const dataSourceDefault = {\r\n        properties: {\r\n            polling_ms: '1000',\r\n            timeout_ms: '100',\r\n            connectTimeout: '300'\r\n        },\r\n        data: {\r\n            name: 'file',\r\n            contentType: {\r\n                name: 'txt'\r\n            },\r\n            position: 'END',\r\n            skipLine: 0,\r\n            protocol: {\r\n                name: 'net',\r\n                protocol: {\r\n                    name: 'udp'\r\n                }\r\n            },\r\n            cache: 1000,\r\n            codec: {\r\n                name: 'line'\r\n            },\r\n            metadata: {\r\n                timestamp: '@timestamp'\r\n            },\r\n            authorization: false,\r\n            properties: {\r\n                connectTimeout: '300'\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    $scope.options = {\r\n        chart: {\r\n            type: 'lineChart',\r\n            height: 450,\r\n            margin: {\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 40,\r\n                left: 55\r\n            },\r\n            x: function (d) {\r\n                return d.x;\r\n            },\r\n            y: function (d) {\r\n                return d.y;\r\n            },\r\n            useInteractiveGuideline: true,\r\n            dispatch: {\r\n                stateChange: function (e) {\r\n                    console.log('stateChange');\r\n                },\r\n                changeState: function (e) {\r\n                    console.log('changeState');\r\n                },\r\n                tooltipShow: function (e) {\r\n                    console.log('tooltipShow');\r\n                },\r\n                tooltipHide: function (e) {\r\n                    console.log('tooltipHide');\r\n                }\r\n            },\r\n            xAxis: {\r\n                axisLabel: '时间(ms)',\r\n                tickFormat: function (d) {\r\n                    return d3.time.format('%H:%M:%S')(new Date(d))\r\n                }\r\n            },\r\n            yAxis: {\r\n                axisLabel: '条数/秒',\r\n                tickFormat: function (d) {\r\n                    return d;\r\n                },\r\n                axisLabelDistance: -10\r\n            },\r\n            callback: function (chart) {\r\n                console.log('!!! lineChart callback !!!');\r\n            }\r\n        },\r\n        title: {\r\n            enable: true,\r\n            text: '采集进度'\r\n        },\r\n        subtitle: {\r\n            enable: true,\r\n            text: '采集时间范围',\r\n            css: {\r\n                'text-align': 'center',\r\n                'margin': '10px 13px 0px 7px'\r\n            }\r\n        },\r\n        caption: {\r\n            html: '采集的总量：未知',\r\n            enable: true,\r\n            css: {\r\n                'text-align': 'justify',\r\n                'margin': '10px 13px 0px 7px'\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    $scope.preview = function (valid) {\r\n        console.log($scope.datasource);\r\n        if (!valid) {\r\n            return false;\r\n        }\r\n        DataSource.preview($scope.datasource, function (data) {\r\n            $scope.previewData = data;\r\n            $scope.showPreview = true;\r\n        });\r\n    };\r\n\r\n    //重置表单\r\n    $scope.resetForm = function () {\r\n        $scope.datasource = angular.copy(dataSourceDefault);\r\n        Util.resetFormValidateState($scope.ds_form);\r\n    };\r\n    $scope.resetForm();\r\n    //保存\r\n    $scope.saveDataSource = function (formValid) {\r\n        if (!formValid) {\r\n            return false;\r\n        }\r\n        let dataForm = angular.copy($scope.datasource);\r\n        delete dataForm.data.uri;\r\n        // if( dataForm.data.name == \"es2\" || dataForm.data.name == \"es5\" ) {\r\n        //     dataForm.data.name = \"es\"\r\n        // }\r\n        DataSource.save(dataForm, function (rt) {\r\n            $scope.message = rt;\r\n            if ($scope.message.status == '200') {\r\n                $scope.reload();\r\n                $scope.show();\r\n                $('.hla-widget-add-table').slideUp();\r\n                $scope.reload();\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n\r\n    $scope.deleteHeader = function () {\r\n        let contentType = $scope.datasource.data.contentType && $scope.datasource.data.contentType;\r\n        if (contentType.isHaveThead &&\r\n            (contentType.isHaveThead === true ||\r\n                contentType.isHaveThead === \"true\")) {\r\n            delete contentType.header;\r\n        }\r\n        let pathContentType = $scope.datasource.data.path && $scope.datasource.data.path.contentType && $scope.datasource.data.path.contentType;\r\n        if (pathContentType.isHaveThead &&\r\n            (pathContentType.isHaveThead === true ||\r\n                pathContentType.isHaveThead === \"true\")) {\r\n            delete pathContentType.header;\r\n        }\r\n    };\r\n\r\n    $scope.uploadFile = function () {\r\n        delete $scope.message;\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        let file = $scope.myFile;\r\n        let reader = new FileReader();\r\n        reader.onload = (function (file) {\r\n            return function (e) {\r\n                $scope.datasource = angular.fromJson(this.result);\r\n                delete $scope.datasource.id; //删除数据源id\r\n                delete $scope.datasource.status;\r\n                //  delete $scope.datasource.id;\r\n                delete $scope.datasource.datatime;\r\n                $edit_table.slideDown();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                delete $scope.myFile;\r\n                $scope.$apply();\r\n            };\r\n        })();\r\n        try {\r\n            reader.readAsText(file);\r\n        }\r\n        catch (e) {\r\n            $scope.message = {\r\n                status: '500',\r\n                message: '数据解析出错,你检查你的数据文件是否正确!'\r\n            };\r\n\r\n        }\r\n\r\n    };\r\n    $scope.show = function (clazz, id) {\r\n\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        let metric_table = $('.hla-widget-metric-table');\r\n        Util.resetFormValidateState($scope.ds_form);\r\n        $scope.channels = DataSource.byType({type: \"channel\"});\r\n        switch (clazz) {\r\n            case 'upload':\r\n                delete $scope.message;\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                metric_table.slideUp();\r\n                upload_table.slideToggle();\r\n                $('.fileinput-remove').trigger('click');\r\n                break;\r\n            case 'search':\r\n                delete $scope.message;\r\n                $edit_table.slideUp();\r\n                $search_table.slideToggle();\r\n                metric_table.slideUp();\r\n                upload_table.slideUp();\r\n                break;\r\n            case 'add':\r\n                delete $scope.message;\r\n                $edit_table.slideToggle();\r\n                $search_table.slideUp();\r\n                metric_table.slideUp();\r\n                upload_table.slideUp();\r\n                $scope.resetForm();\r\n                break;\r\n            case 'edit':\r\n                delete $scope.message;\r\n                DataSource.get({\r\n                    id: id\r\n                }, function (ds) {\r\n                    $scope.datasource = ds;\r\n                    if ($scope.datasource.data.properties && $scope.datasource.data.properties.fromstart) {\r\n                        $scope.datasource.data.properties.fromstart = $scope.datasource.data.properties.fromstart ? $scope.datasource.data.properties.fromstart == 'true' : false;\r\n                    }\r\n                    $scope.channels = $scope.channels.filter(t => t.id !== id);\r\n                    upload_table.slideUp();\r\n                    $edit_table.slideDown();\r\n                    metric_table.slideUp();\r\n                    $search_table.slideUp();\r\n                });\r\n\r\n                break;\r\n            case 'copy':\r\n                delete $scope.message;\r\n                DataSource.get({\r\n                    id: id\r\n                }, function (ds) {\r\n                    $scope.datasource = ds;\r\n                    $scope.datasource.name = $scope.datasource.name + '_copy';\r\n                    delete $scope.datasource.id;\r\n                    delete $scope.datasource.status;\r\n                    delete $scope.datasource.datatime;\r\n                    $edit_table.slideDown();\r\n                    $search_table.slideUp();\r\n                    metric_table.slideUp();\r\n                    upload_table.slideUp();\r\n                });\r\n\r\n                break;\r\n            default:\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                metric_table.slideUp();\r\n                upload_table.slideUp();\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    //删除按钮\r\n    $scope.delete = function (id) {\r\n        $scope.deleteId = id;\r\n        $confirmModal.modal('show');\r\n    };\r\n    //删除确定\r\n    $scope.confirm_yes = function () {\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        DataSource.delete({\r\n            id: $scope.deleteId\r\n        }, function (rt) {\r\n            $scope.message = rt;\r\n            if ($scope.message.status == '200') {\r\n                $scope.reload();\r\n                $edit_table.slideUp();\r\n            }\r\n        });\r\n        $confirmModal.modal('hide');\r\n    };\r\n    $confirmModal.find('.op_yes').off().click(function () {\r\n        $scope.confirm_yes();\r\n    });\r\n    $scope.reload = function () {\r\n        $scope.list = DataSource.get($scope.page, function (pages) {\r\n            pages.result = pages.result.map(function (item) {\r\n                $scope.page['count'] = $scope.list['totalCount'];\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    $scope.addHostPort = function () {\r\n        let listens = $scope.datasource.data.hostPorts;\r\n        if (!listens) {\r\n            listens = $scope.datasource.data.hostPorts = [];\r\n        }\r\n        //listens.push(['', 9300]);\r\n        listens.push(['', '']);\r\n    };\r\n    $scope.removeHostPort = function (index) {\r\n        $scope.datasource.data.hostPorts.splice(index, 1);\r\n    };\r\n\r\n    $scope.addHostEncoding = function () {\r\n        let listens = $scope.datasource.data.listens;\r\n        if (!listens) {\r\n            listens = $scope.datasource.data.listens = [];\r\n        }\r\n        listens.push(['', '']);\r\n    };\r\n    $scope.removeHostEncoding = function (index) {\r\n        $scope.datasource.data.listens.splice(index, 1);\r\n    };\r\n\r\n    $scope.changeDBType = function () {\r\n        let type = $scope.datasource.data.protocol;\r\n        let port = null;\r\n        $scope.drivers = []\r\n        switch (type) {\r\n            case 'mysql':\r\n                port = 3306;\r\n                $scope.datasource.data.driver = \"com.mysql.jdbc.Driver\"\r\n                break;\r\n            case 'oracle':\r\n                port = 1521;\r\n                $scope.datasource.data.driver = \"oracle.jdbc.driver.OracleDriver\"\r\n                break;\r\n            case 'sqlserver':\r\n                port = 1433;\r\n                $scope.datasource.data.driver = \"com.microsoft.jdbc.sqlserver.SQLServerDriver\"\r\n                break;\r\n            case 'DB2':\r\n                $scope.datasource.data.driver = \"com.ibm.db2.jcc.DB2Driver\"\r\n                port = 50000;\r\n                break;\r\n            case 'sybase':\r\n                port = 5000;\r\n                $scope.datasource.data.driver = \"net.sourceforge.jtds.jdbc.Driver\"\r\n                break;\r\n            case 'postgresql':\r\n                $scope.datasource.data.driver = \"org.postgresql.Driver\"\r\n                port = 5432;\r\n                break;\r\n            case 'sqlite':\r\n                $scope.datasource.data.driver = \"org.sqlite.JDBC\"\r\n                port = 0;\r\n                break;\r\n            case 'derby':\r\n                $scope.datasource.data.driver = \"org.apache.derby.jdbc.EmbeddedDriver\"\r\n                port = 1527;\r\n                break;\r\n            case 'phoenix':\r\n                $scope.datasource.data.driver = \"org.apache.phoenix.jdbc.PhoenixDriver\"\r\n                port = 2181;\r\n                break;\r\n        }\r\n        $scope.datasource.data.port = port;\r\n    };\r\n    $scope.changeDataSourceName = function () {\r\n        let name = $scope.datasource.data.name;\r\n        let data = angular.extend(angular.copy(dataSourceDefault.data), {\r\n            name: name\r\n        });\r\n        $scope.single = 'line';\r\n        if (name === 'file') {\r\n        }\r\n        else if (name === 'net') {\r\n            data.contentType = 'net';\r\n            data.host = '0.0.0.0';\r\n            data.port = 514;\r\n        }\r\n        else if (name === 'ftp' || name === 'hdfs' || name === 'sftp') {\r\n            if (name === 'ftp') {\r\n                data.port = 21;\r\n            }\r\n            else if (name === 'sftp') {\r\n                data.port = 22;\r\n            }\r\n            else if (name === \"hdfs\") {\r\n                data.port = 9000;\r\n                data.authentication = \"NONE\";\r\n            }\r\n            data.path = {};\r\n            angular.extend(data.path, {\r\n                contentType: data.contentType,\r\n                name: 'file',\r\n                category: 'other',\r\n                position: data.position,\r\n                skipLine: data.skipLine,\r\n                codec: data.codec\r\n            });\r\n        }\r\n        else if (name === 'es2' || name === 'es5') {\r\n            data.index = 'logs_$';\r\n            data.esType = 'logs';\r\n            data.field = '@timestamp';\r\n            data.hostPorts = [];\r\n        }\r\n        else if (name == 'kafka') {\r\n            data.wildcard = 'false';\r\n        }\r\n        else if (name == 'tuple') {\r\n            data.on = {\r\n                name: \"sql\",\r\n                first: {\r\n                    maxOutOfOrderness: 10000,\r\n                    fields: []\r\n                },\r\n                second: {\r\n                    maxOutOfOrderness: 10000,\r\n                    fields: []\r\n                },\r\n                timeCharacteristic: 'ProcessingTime',\r\n            }\r\n            $scope.resolver = {\r\n                first: {},\r\n                second: {}\r\n            }\r\n            $scope.timefields = {\r\n                first: [],\r\n                second: []\r\n            }\r\n        }\r\n        else if (name == 'single-table') {\r\n            data.channel = {}\r\n            data.table = {\r\n                timeCharacteristic: 'ProcessingTime',\r\n                maxOutOfOrderness: 10000,\r\n                fields: []\r\n            }\r\n            $scope.resolver = {\r\n                channel: {}\r\n            }\r\n            $scope.timefields = {\r\n                channel: []\r\n            }\r\n        }\r\n        else {\r\n            data.data = {};\r\n            delete data.contentType;\r\n            delete data.properties;\r\n            delete data.position;\r\n            delete data.skipLine;\r\n            delete data.protocol;\r\n            delete data.cache;\r\n        }\r\n        $scope.datasource.data = data;\r\n    };\r\n\r\n    $scope.downloadFile = function (itemId) {\r\n        //        console.log(sqlItemId);\r\n        DataSource.download({\r\n            id: itemId\r\n        }, function (response) {\r\n            let fileName = '数据源配置';\r\n            fileName = decodeURI(fileName);\r\n            let url = URL.createObjectURL(new Blob([response.data]));\r\n            let a = document.createElement('a');\r\n            document.body.appendChild(a); //此处增加了将创建的添加到body当中\r\n            a.href = url;\r\n            a.download = fileName + '-' + itemId + '.json';\r\n            a.target = '_blank';\r\n            a.click();\r\n            a.remove(); //将a标签移除\r\n        }, function (response) {\r\n            //            console.log(response);\r\n        });\r\n    } //\r\n\r\n    $scope.changeChannel = function (table) {\r\n        if (table == \"channel\") {\r\n            $scope.datasource.data.table.resolverId = $scope.channels.filter(r => r.id === $scope.datasource.data[table].ref).shift().parser;\r\n            $scope.resolver[table] = $scope.parsers.filter(r => r.id === $scope.datasource.data.table.resolverId).shift();\r\n        }\r\n        else {\r\n            $scope.datasource.data.on[table].resolverId = $scope.channels.filter(r => r.id === $scope.datasource.data[table].ref).shift().parser;\r\n            $scope.resolver[table] = $scope.parsers.filter(r => r.id === $scope.datasource.data.on[table].resolverId).shift();\r\n        }\r\n        $scope.timefields[table] = $scope.resolver[table].properties.filter(r => (r.type === 'datetime' || r.type === 'long'));\r\n    };\r\n\r\n    $scope.changeFieldName = function (table, index) {\r\n        let fieldName = \"\"\r\n        if (table == \"channel\") {\r\n            fieldName = $scope.datasource.data.table.fromFields[index][0];\r\n        }\r\n        else {\r\n            fieldName = $scope.datasource.data.on[table].fromFields[index][0];\r\n        }\r\n        if ($scope.resolver && $scope.resolver[table] && $scope.resolver[table].properties) {\r\n            let p = $scope.resolver[table].properties.filter(p => p.key === fieldName).shift();\r\n            if (p) {\r\n                if (table == \"channel\") {\r\n                    $scope.datasource.data.table.fromFields[index][1] = p.type;\r\n                }\r\n                else {\r\n                    $scope.datasource.data.on[table].fromFields[index][1] = p.type;\r\n                }\r\n            }\r\n            /*else {\r\n             $scope.message = {\r\n             status: '300',\r\n             title: '警告！',\r\n             message: \"解析规则[\" + $scope.resolver.name + \"]不存在字段[\" + fieldName + \"]，请确认是否添加\"\r\n             };\r\n             }*/\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 构造 字段属性\r\n     */\r\n    $scope.addProperty = function (table) {\r\n        if (table == \"channel\") {\r\n            /* if ($scope.datasource.data.table.resolverId) {\r\n                 if ($scope.datasource.data.table.fields) {\r\n                     $scope.datasource.data.table.fields.push(['', 'string']);\r\n                 }\r\n                 else {\r\n                     $scope.datasource.data.table.fields = [];\r\n                     $scope.datasource.data.table.fields.push(['', 'string']);\r\n                 }\r\n             }\r\n             else {\r\n                 $scope.confirm = {\r\n                     title: '提示',\r\n                     message: \"您未选择解析规则，确认添加字段么？\",\r\n                     ok: function () {\r\n                         $scope.datasource.data.table.fields.push(['', 'string']);\r\n                         $('#commonConfirmModal').modal('hide');\r\n                     },\r\n                     cancel: function () {\r\n                         $('#commonConfirmModal').modal('hide');\r\n                     }\r\n                 };\r\n                 $('#commonConfirmModal').modal('show');\r\n             }*/\r\n            if ($scope.datasource.data.table.fields) {\r\n                $scope.datasource.data.table.fields.push(['', 'string']);\r\n            }\r\n            else {\r\n                $scope.datasource.data.table.fields = [];\r\n                $scope.datasource.data.table.fields.push(['', 'string']);\r\n            }\r\n        }\r\n        else {\r\n            if ($scope.datasource.data.on[table].resolverId) {\r\n                if ($scope.datasource.data.on[table].fields) {\r\n                    $scope.datasource.data.on[table].fields.push(['', 'string']);\r\n                }\r\n                else {\r\n                    $scope.datasource.data.on[table].fields = [];\r\n                    $scope.datasource.data.on[table].fields.push(['', 'string']);\r\n                }\r\n            }\r\n            else {\r\n                $scope.confirm = {\r\n                    title: '提示',\r\n                    message: \"您未选择解析规则，确认添加字段么？\",\r\n                    ok: function () {\r\n                        $scope.datasource.data.on[table].fields.push(['', 'string']);\r\n                        $('#commonConfirmModal').modal('hide');\r\n                    },\r\n                    cancel: function () {\r\n                        $('#commonConfirmModal').modal('hide');\r\n                    }\r\n                };\r\n                $('#commonConfirmModal').modal('show');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * 删除字段属性\r\n     * @param index\r\n     */\r\n    $scope.deleteProperty = function (table, index) {\r\n        if (table == \"channel\") {\r\n            $scope.datasource.data.table.fields.splice(index, 1);\r\n        }\r\n        else {\r\n            $scope.datasource.data.on[table].fields.splice(index, 1);\r\n        }\r\n    };\r\n    $scope.changeTimeField = function (table) {\r\n        if ($scope.timefields[table]) {\r\n            let timefield = \"\";\r\n            if (table == \"channel\") {\r\n                timefield = $scope.timefields[table].filter(t => t.key === $scope.datasource.data.table.timeField).shift();\r\n            }\r\n            else {\r\n                timefield = $scope.timefields[table].filter(t => t.key === $scope.datasource.data.on[table].timeField).shift();\r\n            }\r\n            if (!timefield) {\r\n                $scope.message = {\r\n                    status: '300',\r\n                    title: \"警告！\",\r\n                    message: \"解析规则中不存在您填写的时间字段，请确认字段是否为时间类型或long类型\"\r\n                };\r\n            }\r\n        }\r\n    };\r\n});\r\n"]}