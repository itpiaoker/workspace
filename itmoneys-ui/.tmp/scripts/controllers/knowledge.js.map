{"version":3,"sources":["controllers/knowledge.js"],"names":["app","controller","$scope","$rootScope","$location","Knowledge","Util","DataSource","Metrics","Collector","Parser","$path","path","bind","encodings","$confirmModal","$","countMessage","d3_format","d3","time","format","days","knowledgeDefault","name","collector","datasource","parser","collectors","query","datasources","knowledges","resolvers","resolverList","options","chart","type","height","margin","top","right","bottom","left","x","d","y","useInteractiveGuideline","dispatch","stateChange","e","console","log","changeState","tooltipShow","tooltipHide","xAxis","axisLabel","tickFormat","Date","yAxis","axisLabelDistance","callback","title","enable","text","subtitle","css","caption","html","resetForm","knowledge","angular","copy","resetFormValidateState","ds_form","save","formValid","dataForm","rt","message","status","reload","show","slideUp","uploadFile","$edit_table","$search_table","upload_table","file","myFile","reader","FileReader","onload","fromJson","result","id","collectorList","filter","length","datasourceList","parserList","datatime","slideDown","$apply","readAsText","clazz","slideToggle","get","ds","operate","opt","delete","deleteId","modal","confirm_yes","find","off","click","list","page","pages","map","addHostPort","listens","data","hostPorts","push","removeHostPort","index","splice","addHostEncoding","removeHostEncoding","changeDBType","protocol","port","downloadFile","itemId","download","response","fileName","decodeURI","url","URL","createObjectURL","Blob","a","document","createElement","body","appendChild","href","target","remove"],"mappings":"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","file":"knowledge.js","sourcesContent":["'use strict';\r\n\r\napp.controller('KnowledgeController', function ($scope, $rootScope, $location, Knowledge, Util, DataSource, Metrics, Collector, Parser) {\r\n    $rootScope.$path = $location.path.bind($location);\r\n    $scope.encodings = ['UTF-8', 'GBK', 'GB18030', 'GB2312', 'BIG5', 'UNICODE', 'ASCII', 'ISO-8859-1'];\r\n    const $confirmModal = $('#confirmModal');\r\n    $scope.countMessage = '采集的总量：未知';\r\n    const d3_format = d3.time.format('%Y-%m-%d %H:%M:%S');\r\n    let days = 1 * 60 * 60 * 1000;\r\n    const knowledgeDefault = {\r\n        name: '',\r\n        collector: '',\r\n        datasource: '',\r\n        parser: ''\r\n    }\r\n\r\n    //采集器\r\n    $scope.collectors = Collector.query();\r\n    //数据源\r\n    $scope.datasources = DataSource.query();\r\n    //数据通道\r\n    $scope.knowledges = Knowledge.query();\r\n\r\n    //解析规则\r\n    $scope.resolvers = Parser.query();\r\n    $scope.resolverList = $scope.resolvers;\r\n\r\n    $scope.options = {\r\n        chart: {\r\n            type: 'lineChart',\r\n            height: 450,\r\n            margin: {\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 40,\r\n                left: 55\r\n            },\r\n            x: function (d) {\r\n                return d.x;\r\n            },\r\n            y: function (d) {\r\n                return d.y;\r\n            },\r\n            useInteractiveGuideline: true,\r\n            dispatch: {\r\n                stateChange: function (e) {\r\n                    console.log('stateChange');\r\n                },\r\n                changeState: function (e) {\r\n                    console.log('changeState');\r\n                },\r\n                tooltipShow: function (e) {\r\n                    console.log('tooltipShow');\r\n                },\r\n                tooltipHide: function (e) {\r\n                    console.log('tooltipHide');\r\n                }\r\n            },\r\n            xAxis: {\r\n                axisLabel: '时间(ms)',\r\n                tickFormat: function (d) {\r\n                    return d3.time.format('%H:%M:%S')(new Date(d))\r\n                }\r\n            },\r\n            yAxis: {\r\n                axisLabel: '条数/秒',\r\n                tickFormat: function (d) {\r\n                    return d;\r\n                },\r\n                axisLabelDistance: -10\r\n            },\r\n            callback: function (chart) {\r\n                console.log('!!! lineChart callback !!!');\r\n            }\r\n        },\r\n        title: {\r\n            enable: true,\r\n            text: '采集进度'\r\n        },\r\n        subtitle: {\r\n            enable: true,\r\n            text: '采集时间范围',\r\n            css: {\r\n                'text-align': 'center',\r\n                'margin': '10px 13px 0px 7px'\r\n            }\r\n        },\r\n        caption: {\r\n            html: ' ',\r\n            enable: true,\r\n            css: {\r\n                'text-align': 'justify',\r\n                'margin': '10px 13px 0px 7px'\r\n            }\r\n        }\r\n    };\r\n\r\n    //重置表单\r\n    $scope.resetForm = function () {\r\n        $scope.knowledge = angular.copy(knowledgeDefault);\r\n        Util.resetFormValidateState($scope.ds_form);\r\n    };\r\n    $scope.resetForm();\r\n    //保存\r\n    $scope.save = function (formValid) {\r\n        if (!formValid) return false;\r\n        let dataForm = angular.copy($scope.knowledge);\r\n        Knowledge.save(dataForm, function (rt) {\r\n            $scope.message = rt;\r\n            if ($scope.message.status == '200') {\r\n                $scope.reload();\r\n                $scope.show();\r\n                $('.hla-widget-add-table').slideUp();\r\n            }\r\n        });\r\n    };\r\n\r\n    $scope.uploadFile = function () {\r\n        delete $scope.message;\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        let file = $scope.myFile;\r\n        let reader = new FileReader();\r\n        reader.onload = (function (file) {\r\n            return function (e) {\r\n                $scope.knowledge = angular.fromJson(this.result);\r\n                delete $scope.knowledge.id;//删除知识库的id\r\n                //删除不存在的采集器\r\n                let collectorList = $scope.collectors.filter(function (collector) {\r\n                    return collector.id == $scope.knowledge.collector;\r\n\r\n                });\r\n                if (collectorList.length == 0) {\r\n                    delete $scope.knowledge.collector;\r\n                }\r\n                //删除不存在的数据源\r\n                let datasourceList = $scope.datasources.filter(function (datasource) {\r\n                    return datasource.id == $scope.knowledge.datasource;\r\n\r\n                });\r\n                if (datasourceList.length == 0) {\r\n                    delete $scope.knowledge.datasource;\r\n                }\r\n                //删除不存在的解析规则\r\n                let parserList = $scope.resolvers.filter(function (resolvers) {\r\n                    return resolvers.id == $scope.knowledge.parser;\r\n\r\n                });\r\n                if (parserList.length == 0) {\r\n                    delete $scope.knowledge.parser;\r\n                }\r\n\r\n                delete $scope.knowledge.status;\r\n                //  delete $scope.knowledge.id;\r\n                delete $scope.knowledge.datatime;\r\n                $edit_table.slideDown();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                delete $scope.myFile;\r\n                $scope.$apply();\r\n\r\n            };\r\n        })();\r\n        try {\r\n            reader.readAsText(file);\r\n        } catch (e) {\r\n            $scope.message = {\r\n                status: '500',\r\n                message: '数据解析出错,你检查你的数据文件是否正确!'\r\n            };\r\n\r\n        }\r\n\r\n    };\r\n    $scope.show = function (clazz, id) {\r\n\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        Util.resetFormValidateState($scope.ds_form);\r\n        switch (clazz) {\r\n            case 'upload':\r\n                delete  $scope.message;\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                upload_table.slideToggle();\r\n                break;\r\n\r\n            case 'search':\r\n                delete  $scope.message;\r\n                $edit_table.slideUp();\r\n                $search_table.slideToggle();\r\n                upload_table.slideUp();\r\n                break;\r\n            case 'add':\r\n                delete  $scope.message;\r\n                $edit_table.slideToggle();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                $scope.resetForm();\r\n                break;\r\n            case 'edit':\r\n                delete  $scope.message;\r\n                Knowledge.get({id: id}, function (ds) {\r\n                    $scope.knowledge = ds;\r\n                    upload_table.slideUp();\r\n                    $edit_table.slideDown();\r\n                    $search_table.slideUp();\r\n                });\r\n\r\n                break;\r\n            case 'copy':\r\n                delete  $scope.message;\r\n                console.log(id);\r\n                Knowledge.get({id: id}, function (ds) {\r\n                    $scope.knowledge = ds;\r\n                    $scope.knowledge.name = $scope.knowledge.name + '_copy';\r\n                    delete $scope.knowledge.id;\r\n                    delete $scope.knowledge.status;\r\n                    delete $scope.knowledge.datatime;\r\n                    $edit_table.slideDown();\r\n                    $search_table.slideUp();\r\n                    upload_table.slideUp();\r\n                });\r\n\r\n                break;\r\n            default:\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                break;\r\n        }\r\n\r\n    };\r\n    $scope.operate = function (opt, id) {\r\n        Knowledge.operate({opt: opt, id: id}, function (rt) {\r\n            $scope.message = rt;\r\n            //console.log('rt='+JSON.stringify(rt))\r\n            $scope.reload();\r\n        });\r\n\r\n    };\r\n\r\n    //删除按钮\r\n    $scope.delete = function (id) {\r\n        $scope.deleteId = id;\r\n        $confirmModal.modal('show');\r\n    };\r\n    //删除确定\r\n    $scope.confirm_yes = function () {\r\n        Knowledge.delete({id: $scope.deleteId}, function (rt) {\r\n            $scope.message = rt;\r\n            $scope.reload();\r\n        });\r\n        $confirmModal.modal('hide');\r\n    };\r\n    $confirmModal.find('.op_yes').off().click(function () {\r\n        $scope.confirm_yes();\r\n    });\r\n    $scope.reload = function () {\r\n        $scope.list = Knowledge.get($scope.page, function (pages) {\r\n            if (pages.result.length > 0) {\r\n                //console.log('pages.result='+JSON.stringify(pages.result));\r\n                pages.result = pages.result.map(function (knowledge) {\r\n                    return knowledge;\r\n                });\r\n                $scope.page['count'] = $scope.list['totalCount'];\r\n                $scope.page['limit'] = $scope.list['limit'];\r\n                $scope.page['total'] = $scope.list['totalPage'];\r\n            } else {\r\n                pages.result = [];\r\n            }\r\n        });\r\n    };\r\n    $scope.addHostPort = function () {\r\n        let listens = $scope.knowledge.data.hostPorts;\r\n        if (!listens) {\r\n            listens = $scope.knowledge.data.hostPorts = [];\r\n        }\r\n        listens.push(['', 9300]);\r\n    };\r\n    $scope.removeHostPort = function (index) {\r\n        $scope.knowledge.data.hostPorts.splice(index, 1);\r\n    };\r\n\r\n    $scope.addHostEncoding = function () {\r\n        let listens = $scope.knowledge.data.listens;\r\n        if (!listens) {\r\n            listens = $scope.knowledge.data.listens = [];\r\n        }\r\n        listens.push(['', '']);\r\n    };\r\n    $scope.removeHostEncoding = function (index) {\r\n        $scope.knowledge.data.listens.splice(index, 1);\r\n    };\r\n\r\n\r\n    $scope.changeDBType = function () {\r\n        let type = $scope.knowledge.data.protocol;\r\n        let port = null;\r\n        switch (type) {\r\n            case 'mysql':\r\n                port = 3306;\r\n                break;\r\n            case 'oracle':\r\n                port = 1521;\r\n                break;\r\n            case 'sqlserver':\r\n                port = 1433;\r\n                break;\r\n            case 'DB2':\r\n                port = 50000;\r\n                break;\r\n            case 'sybase':\r\n                port = 5000;\r\n                break;\r\n            case 'postgresql':\r\n                port = 5432;\r\n                break;\r\n            case 'sqlite':\r\n                port = 0;\r\n                break;\r\n            case 'derby':\r\n                port = 1527;\r\n                break;\r\n        }\r\n        $scope.knowledge.data.port = port;\r\n    };\r\n    $scope.downloadFile = function (itemId) {\r\n//        console.log(sqlItemId);\r\n        Knowledge.download({id: itemId}, function (response) {\r\n            let fileName = '知识库配置';\r\n            fileName = decodeURI(fileName);\r\n            let url = URL.createObjectURL(new Blob([response.data]));\r\n            let a = document.createElement('a');\r\n            document.body.appendChild(a); //此处增加了将创建的添加到body当中\r\n            a.href = url;\r\n            a.download = fileName + '-' + itemId + '.json';\r\n            a.target = '_blank';\r\n            a.click();\r\n            a.remove(); //将a标签移除\r\n        }, function (response) {\r\n//            console.log(response);\r\n        });\r\n    }//\r\n});\r\n"]}