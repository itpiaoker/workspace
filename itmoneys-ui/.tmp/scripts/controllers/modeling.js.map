{"version":3,"sources":["controllers/modeling.js"],"names":["app","controller","$scope","$rootScope","$location","Modeling","Analyzer","Util","DataSource","Metrics","Collector","Parser","Writer","Channel","$path","path","bind","encodings","$confirmModal","$","countMessage","d3_format","d3","time","format","days","collectors","query","channels","byType","type","resolvers","resolverList","analyzers","datasource","changeDataSourceType","id","get","ds","sinks","analyzeSel","find","item","modeling","analyzer","data","name","typeDisable","usableCheck","angular","copy","setForSave","check","rt","resetForm","resetFormValidateState","ds_form","save","formValid","dataForm","message","status","reload","show","slideUp","uploadFile","$edit_table","$search_table","upload_table","file","myFile","reader","FileReader","onload","e","fromJson","result","list","filter","collector","worker","length","analyzerList","datatime","setWriterForViewer","slideDown","$apply","readAsText","clazz","metric_table","slideToggle","metrics","propertiesWithType","jobId","connectTest","valid","workerId","url","cluster","element","html","opt","error","content","operate","delete","deleteId","modal","confirm_yes","off","click","page","pages","map","addHostPort","listens","hostPorts","push","removeHostPort","index","splice","addHostEncoding","removeHostEncoding","$resolved","tempWriters","Array","i","j","writer","getIndex","sink","undefined","downloadFile","itemId","download","response","fileName","decodeURI","URL","createObjectURL","Blob","a","document","createElement","body","appendChild","href","target","remove","querySourceType","sourceId","callback","valueOf","sourceType","changeDataSource","channelId","reg","properties","v","test","eval","typeChange","queryByType"],"mappings":"AAAA;;AAEAA,IAAIC,WAAW,iKAAsB,UAAUC,QAAQC,YAAYC,WAAWC,UAAUC,UAAUC,MAAMC,YAAYC,SAASC,WAAWC,QAAQC,QAAQC,SAAS;IAC7JV,WAAWW,QAAQV,UAAUW,KAAKC,KAAKZ;IACvCF,OAAOe,YAAY,CAAC,SAAS,OAAO,WAAW,UAAU,QAAQ,WAAW,SAAS;IACrF,IAAMC,gBAAgBC,EAAE;IACxBjB,OAAOkB,eAAe;IACtB,IAAMC,YAAYC,GAAGC,KAAKC,OAAO;IACjC,IAAIC,OAAO,IAAI,KAAK,KAAK;;;IAGzBvB,OAAOwB,aAAahB,UAAUiB;;;;IAI9BzB,OAAO0B,WAAWpB,WAAWqB,OAAO,EAACC,MAAM;;;IAG3C5B,OAAO6B,YAAYpB,OAAOgB;IAC1BzB,OAAO8B,eAAe9B,OAAO6B;;IAE7B7B,OAAO+B,YAAY3B,SAASqB;;;IAG5BzB,OAAOgC,aAAa;;IAEpBhC,OAAOiC,uBAAuB,UAAUC,IAAI;QACxC5B,WAAW6B,IAAI;YACXD,IAAIA;WACL,UAAUE,IAAI;YACbpC,OAAOgC,aAAaI;;;;;IAK5BpC,OAAOqC,QAAQ3B,OAAOe;;IAEtBzB,OAAOsC,aAAa,YAAY;QAC5BtC,OAAO+B,UAAUQ,KAAK,UAAA,MAAQ;YAC1B,IAAIC,KAAKN,OAAOlC,OAAOyC,SAASC,UAAU;gBACtC,IAAIF,KAAKG,KAAKC,QAAQ,OAAO;oBACzB5C,OAAOyC,SAASb,KAAKA,OAAO;oBAC5B5B,OAAOyC,SAASI,cAAc;uBAE3B;;oBAEH7C,OAAOyC,SAASI,cAAc;;gBAGlC,OAAO;mBACJ;gBACH,OAAO;;;;;IAKnB7C,OAAO8C,cAAc,YAAY;QAC7B,IAAIH,OAAOI,QAAQC,KAAKhD,OAAOyC;QAC/BE,KAAKN,QAAQY,WAAWN,KAAKN;QAC7BlC,SAAS+C,MAAMP,MAAM,UAAUQ,IAAI;YAC/BnD,OAAOmD,KAAKA;;;;;IAKpBnD,OAAOoD,YAAY,YAAY;QAC3BpD,OAAOyC,WAAW,EAACJ,OAAO,IAAIT,MAAM,EAACgB,MAAM;QAC3CvC,KAAKgD,uBAAuBrD,OAAOsD;;IAEvCtD,OAAOoD;;IAEPpD,OAAOuD,OAAO,UAAUC,WAAW;QAC/B,IAAI,CAACA,WAAW;YACZ,OAAO;;QAEX,IAAIC,WAAWV,QAAQC,KAAKhD,OAAOyC;QACnCgB,SAASpB,QAAQY,WAAWQ,SAASpB;;QAErClC,SAASoD,KAAKE,UAAU,UAAUN,IAAI;YAClCnD,OAAO0D,UAAUP;YACjB,IAAInD,OAAO0D,QAAQC,UAAU,OAAO;gBAChC3D,OAAO4D;gBACP5D,OAAO6D;gBACP5C,EAAE,yBAAyB6C;;;;;IAMvC9D,OAAO+D,aAAa,YAAY;QAC5B,OAAO/D,OAAO0D;QACd,IAAIM,cAAc/C,EAAE;QACpB,IAAIgD,gBAAgBhD,EAAE;QACtB,IAAIiD,eAAejD,EAAE;QACrB,IAAIkD,OAAOnE,OAAOoE;QAClB,IAAIC,SAAS,IAAIC;QACjBD,OAAOE,SAAU,UAAUJ,MAAM;YAC7B,OAAO,UAAUK,GAAG;gBAChBxE,OAAOyC,WAAWM,QAAQ0B,SAAS,KAAKC;gBACxC,OAAO1E,OAAOyC,SAASP;;gBAEvB,IAAIyC,OAAO3E,OAAOwB,WAAWoD,OAAO,UAAUC,WAAW;oBACrD,OAAOA,UAAU3C,MAAMlC,OAAOyC,SAASqC;;gBAG3C,IAAIH,KAAKI,UAAU,GAAG;oBAClB,OAAO/E,OAAOyC,SAASqC;;;;;;;;;;;;gBAa3B,IAAIE,eAAehF,OAAO+B,UAAU6C,OAAO,UAAUlC,UAAU;oBAC3D,OAAOA,SAASR,MAAMlC,OAAOyC,SAASC;;gBAG1C,IAAIsC,aAAaD,UAAU,GAAG;oBAC1B,OAAO/E,OAAOyC,SAASC;;;gBAG3B,OAAO1C,OAAOyC,SAASkB;;gBAEvB,OAAO3D,OAAOyC,SAASwC;gBACvBC,mBAAmBnC,QAAQC,KAAKhD,OAAOyC,SAASJ;gBAChD2B,YAAYmB;gBACZlB,cAAcH;gBACdI,aAAaJ;gBACb,OAAO9D,OAAOoE;gBACdpE,OAAOoF;;;QAIf,IAAI;YACAf,OAAOgB,WAAWlB;UAEtB,OAAOK,GAAG;YACNxE,OAAO0D,UAAU;gBACbC,QAAQ;gBACRD,SAAS;;;;IAMrB1D,OAAO6D,OAAO,UAAUyB,OAAOpD,IAAI;;QAE/B,IAAI8B,cAAc/C,EAAE;QACpB,IAAIgD,gBAAgBhD,EAAE;QACtB,IAAIiD,eAAejD,EAAE;QACrB,IAAIsE,eAAetE,EAAE;QACrBZ,KAAKgD,uBAAuBrD,OAAOsD;QACnC,QAAQgC;YACJ,KAAK;gBACD,OAAQtF,OAAO0D;gBACfM,YAAYF;gBACZG,cAAcH;gBACdyB,aAAazB;gBACbI,aAAasB;gBACb;;YAEJ,KAAK;gBACD,OAAQxF,OAAO0D;;gBAEfM,YAAYF;gBACZG,cAAcuB;gBACdD,aAAazB;gBACbI,aAAaJ;gBACb;YACJ,KAAK;gBACD,OAAQ9D,OAAO0D;gBACfM,YAAYwB;gBACZvB,cAAcH;gBACdyB,aAAazB;gBACbI,aAAaJ;gBACb9D,OAAOoD;gBACP;YACJ,KAAK;gBACD,OAAQpD,OAAO0D;gBACf1D,OAAOyF,QAAQvD;gBACf8B,YAAYF;gBACZG,cAAcH;gBACdyB,aAAaJ;gBACbjB,aAAaJ;;gBAEb;YACJ,KAAK;gBACD,OAAQ9D,OAAO0D;gBACfvD,SAASgC,IAAI,EAACD,IAAIA,MAAK,UAAUE,IAAI;oBACjCpC,OAAOyC,WAAWL;;oBAElB8C,mBAAmBnC,QAAQC,KAAKZ,GAAGC;oBACnCrC,OAAOsC;;;;;;;;;oBASPoD;oBACAxB,aAAaJ;oBACbE,YAAYmB;oBACZI,aAAazB;oBACbG,cAAcH;;;gBAGlB;YACJ,KAAK;gBACD,OAAQ9D,OAAO0D;gBACfvD,SAASgC,IAAI,EAACD,IAAIA,MAAK,UAAUE,IAAI;;oBAEjCpC,OAAOyC,WAAWL;oBAClBpC,OAAOyC,SAASG,OAAO5C,OAAOyC,SAASG,OAAO;oBAC9C,OAAO5C,OAAOyC,SAASP;oBACvB,OAAOlC,OAAOyC,SAASkD;oBACvB,OAAO3F,OAAOyC,SAASkB;oBACvB,OAAO3D,OAAOyC,SAASwC;oBACvBC,mBAAmBnC,QAAQC,KAAKZ,GAAGC;oBACnCqD;oBACA1B,YAAYmB;oBACZlB,cAAcH;oBACdyB,aAAazB;oBACbI,aAAaJ;;;gBAGjB;YACJ,KAAK;gBACDG,cAAcH;gBACdyB,aAAazB;gBACbI,aAAaJ;gBACb;YACJ;gBACIE,YAAYF;gBACZG,cAAcH;gBACdyB,aAAazB;gBACbI,aAAaJ;gBACb;;;IAIZ9D,OAAO4F,cAAc,UAAUC,OAAO;QAClC,IAAIC,WAAW9F,OAAOyC,SAASqC;QAC/B,IAAIiB,MAAM/F,OAAOyC,SAASb,KAAKoE;QAC/B,IAAIH,OAAO;YACP9C,QAAQkD,QAAQ,iBAAiBC,KAAK;YACtC/F,SAASyF,YAAY,EAACO,KAAK,SAASL,UAAUA,UAAUC,KAAKA,OAAM,UAAU5C,IAAI;gBAC7EnD,OAAO0D,UAAUP;gBACjBJ,QAAQkD,QAAQ,iBAAiBC,KAAK;eACvC,UAAUE,OAAO;gBAChB,IAAIC,UAAU;gBACd,IAAI3C,UAAU;oBACVA,SAAS2C;;gBAEbrG,OAAO0D,UAAUA;gBACjBX,QAAQkD,QAAQ,iBAAiBC,KAAK;;;;IAIlDlG,OAAOsG,UAAU,UAAUH,KAAKjE,IAAI;QAChC/B,SAASmG,QAAQ,EAACH,KAAKA,KAAKjE,IAAIA,MAAK,UAAUiB,IAAI;YAC/CnD,OAAO0D,UAAUP;YACjBnD,OAAO4D;WACR,UAAUwC,OAAO;YAChB,IAAIC,UAAU;YACd,IAAI3C,UAAU;gBACVA,SAAS2C;;YAEbrG,OAAO0D,UAAUA;;;;;IAKzB1D,OAAOuG,SAAS,UAAUrE,IAAI;QAC1BlC,OAAOwG,WAAWtE;QAClBlB,cAAcyF,MAAM;;;IAGxBzG,OAAO0G,cAAc,YAAY;QAC7BvG,SAASoG,OAAO,EAACrE,IAAIlC,OAAOwG,YAAW,UAAUrD,IAAI;YACjDnD,OAAO0D,UAAUP;YACjBnD,OAAO4D;;QAEX5C,cAAcyF,MAAM;;IAExBzF,cAAcuB,KAAK,WAAWoE,MAAMC,MAAM,YAAY;QAClD5G,OAAO0G;;IAEX1G,OAAO4D,SAAS,YAAY;QACxB5D,OAAO2E,OAAOxE,SAASgC,IAAInC,OAAO6G,MAAM,UAAUC,OAAO;YACrD,IAAIA,MAAMpC,OAAOK,SAAS,GAAG;gBACzB+B,MAAMpC,SAASoC,MAAMpC,OAAOqC,IAAI,UAAUtE,UAAU;oBAChD,OAAOA;;mBAGV;gBACDqE,MAAMpC,SAAS;;;;IAI3B1E,OAAOgH,cAAc,YAAY;QAC7B,IAAIC,UAAUjH,OAAOyC,SAASE,KAAKuE;QACnC,IAAI,CAACD,SAAS;YACVA,UAAUjH,OAAOyC,SAASE,KAAKuE,YAAY;;QAE/CD,QAAQE,KAAK,CAAC,IAAI;;IAEtBnH,OAAOoH,iBAAiB,UAAUC,OAAO;QACrCrH,OAAOyC,SAASE,KAAKuE,UAAUI,OAAOD,OAAO;;;IAGjDrH,OAAOuH,kBAAkB,YAAY;QACjC,IAAIN,UAAUjH,OAAOyC,SAASE,KAAKsE;QACnC,IAAI,CAACA,SAAS;YACVA,UAAUjH,OAAOyC,SAASE,KAAKsE,UAAU;;QAE7CA,QAAQE,KAAK,CAAC,IAAI;;IAEtBnH,OAAOwH,qBAAqB,UAAUH,OAAO;QACzCrH,OAAOyC,SAASE,KAAKsE,QAAQK,OAAOD,OAAO;;;;IAI/C,SAASnC,mBAAmB7C,OAAO;QAC/B,IAAIrC,OAAOqC,MAAMoF,WAAW;YACxB,IAAIC,cAAc,IAAIC,MAAM3H,OAAOqC,MAAM0C;YACzC,IAAI1C,OAAO;;gBAGP,KAAK,IAAIuF,IAAI,GAAGC,IAAIxF,MAAM0C,QAAQ6C,IAAIC,GAAGD,KAAK;oBAC1C,IAAIE,SAASzF,MAAMuF;oBACnB,IAAIE,QAAQ;wBACR,IAAIT,QAAQU,SAASD;wBACrB,IAAIT,MAAMtC,UAAU,GAAG;4BACnB2C,YAAYL,MAAM,MAAM,EAACnF,IAAImF,MAAM,GAAGnF,IAAIU,MAAMyE,MAAM,GAAGzE;;;;;YAKzE5C,OAAOyC,SAASJ,QAAQqF;;;QAG5B,SAASK,SAAS7F,IAAI;YAClB,IAAIS,OAAO;;YAEX,KAAK,IAAIiF,KAAI,GAAGC,KAAI7H,OAAOqC,MAAM0C,QAAQ6C,KAAIC,IAAGD,MAAK;gBACjD,IAAI5H,OAAOqC,MAAMuF,IAAG1F,MAAMA,IAAI;oBAC1BS,OAAO,CAACiF,IAAG5H,OAAOqC,MAAMuF;oBACxB;;;YAGR,OAAOjF;;;;;IAMf,SAASM,WAAWZ,OAAO;QACvB,OAAO,CAACA,SAAS,IAAIuC,OAAO,UAAUoD,MAAM;YACxC,OAAOA,QAAQ,QAAQA,QAAQC;WAChClB,IAAI,UAAUiB,MAAM;YACnB,OAAOA,KAAK9F;;;;IAIpBlC,OAAOkI,eAAe,UAAUC,QAAQ;QACpChI,SAASiI,SAAS,EAAClG,IAAIiG,UAAS,UAAUE,UAAU;YAChD,IAAIC,WAAW;YACfA,WAAWC,UAAUD;YACrB,IAAIvC,MAAMyC,IAAIC,gBAAgB,IAAIC,KAAK,CAACL,SAAS1F;YACjD,IAAIgG,IAAIC,SAASC,cAAc;YAC/BD,SAASE,KAAKC,YAAYJ;YAC1BA,EAAEK,OAAOjD;YACT4C,EAAEP,WAAWE,WAAW,MAAMH,SAAS;YACvCQ,EAAEM,SAAS;YACXN,EAAE/B;YACF+B,EAAEO;WACH,UAAUb,UAAU;;;;;;IAM3BrI,OAAOmJ,kBAAkB,UAAUC,UAAUC,UAAU;QACnD,IAAK,OAAOD,YAAY,eAAiB,OAAOA,SAASE,aAAa,YAAcF,SAASrE,SAAS,GAAI;YACtGzE,WAAW6B,IAAI,EAACD,IAAIkH,YAAW,UAAUhH,IAAI;gBACzCpC,OAAOyC,SAAS8G,aAAanH,GAAGO,KAAKC;;;gBAGrCyG;;eAGH;YACDA;;;;;IAKRrJ,OAAOwJ,mBAAmB,UAAUC,WAAW;QAC3CzJ,OAAOmJ,gBAAgBM,WAAW,YAAY;;;;;;;;IAQlD,SAAS/D,qBAAqB;QAC1B,IAAIgE,MAAM;QACV,KAAK,IAAIlH,QAAQxC,OAAOyC,SAASkH,YAAY;YACzC,IAAIC,IAAI5J,OAAOyC,SAASkH,WAAWnH;YACnC,IAAIoH,KAAKF,IAAIG,KAAKD,IAAI;gBAClB5J,OAAOyC,SAASkH,WAAWnH,QAAQsH,KAAKF;;;;;IAKpD5J,OAAO+J,aAAa,YAAY;;;QAG5B3J,SAAS4J,YAAY,EAACpI,MAAM5B,OAAOyC,SAASb,KAAKgB,QAAO,UAAUO,IAAI;YAClEnD,OAAO+B,YAAYoB;;;IA1a/B","file":"modeling.js","sourcesContent":["'use strict';\r\n\r\napp.controller('ModelingController', function ($scope, $rootScope, $location, Modeling, Analyzer, Util, DataSource, Metrics, Collector, Parser, Writer, Channel) {\r\n    $rootScope.$path = $location.path.bind($location);\r\n    $scope.encodings = ['UTF-8', 'GBK', 'GB18030', 'GB2312', 'BIG5', 'UNICODE', 'ASCII', 'ISO-8859-1'];\r\n    const $confirmModal = $('#confirmModal');\r\n    $scope.countMessage = '采集的总量：未知';\r\n    const d3_format = d3.time.format('%Y-%m-%d %H:%M:%S');\r\n    let days = 1 * 60 * 60 * 1000;\r\n\r\n    //采集器\r\n    $scope.collectors = Collector.query();\r\n    //数据源\r\n    /*$scope.datasources = DataSource.query();*/\r\n    //数据通道列表\r\n    $scope.channels = DataSource.byType({type: \"channel\"});\r\n\r\n    //解析规则\r\n    $scope.resolvers = Parser.query();\r\n    $scope.resolverList = $scope.resolvers;\r\n    //分析规则\r\n    $scope.analyzers = Analyzer.query();\r\n\r\n    //数据源实体\r\n    $scope.datasource = {};\r\n    //获得数据源详情\r\n    $scope.changeDataSourceType = function (id) {\r\n        DataSource.get({\r\n            id: id\r\n        }, function (ds) {\r\n            $scope.datasource = ds;\r\n        });\r\n    };\r\n\r\n    //数据存储\r\n    $scope.sinks = Writer.query();\r\n\r\n    $scope.analyzeSel = function () {\r\n        $scope.analyzers.find(item => {\r\n            if (item.id === $scope.modeling.analyzer) {\r\n                if (item.data.name == 'sql') {\r\n                    $scope.modeling.type.type = 'analyzer';\r\n                    $scope.modeling.typeDisable = true;\r\n\r\n                } else {\r\n                    //$scope.modeling.type = 'analyzer';\r\n                    $scope.modeling.typeDisable = false;\r\n\r\n                }\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n    }\r\n\r\n    $scope.usableCheck = function () {\r\n        let data = angular.copy($scope.modeling);\r\n        data.sinks = setForSave(data.sinks);\r\n        Modeling.check(data, function (rt) {\r\n            $scope.rt = rt;\r\n        });\r\n    };\r\n\r\n    //重置表单\r\n    $scope.resetForm = function () {\r\n        $scope.modeling = {sinks: [], type: {name: \"analyzer\"}};\r\n        Util.resetFormValidateState($scope.ds_form);\r\n    };\r\n    $scope.resetForm();\r\n    //保存\r\n    $scope.save = function (formValid) {\r\n        if (!formValid) {\r\n            return false;\r\n        }\r\n        let dataForm = angular.copy($scope.modeling);\r\n        dataForm.sinks = setForSave(dataForm.sinks);\r\n        //console.log('dataForm='+JSON.stringify(dataForm));\r\n        Modeling.save(dataForm, function (rt) {\r\n            $scope.message = rt;\r\n            if ($scope.message.status == '200') {\r\n                $scope.reload();\r\n                $scope.show();\r\n                $('.hla-widget-add-table').slideUp();\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    $scope.uploadFile = function () {\r\n        delete $scope.message;\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        let file = $scope.myFile;\r\n        let reader = new FileReader();\r\n        reader.onload = (function (file) {\r\n            return function (e) {\r\n                $scope.modeling = angular.fromJson(this.result);\r\n                delete $scope.modeling.id;//删除数据源id\r\n\r\n                let list = $scope.collectors.filter(function (collector) {\r\n                    return collector.id == $scope.modeling.worker;\r\n\r\n                });\r\n                if (list.length == 0) {\r\n                    delete $scope.modeling.worker;\r\n                }\r\n\r\n                /*//删除不存在的数据源\r\n                let datasourceList = $scope.datasources.filter(function (datasource) {\r\n                    return datasource.id == $scope.modeling.channel;\r\n\r\n                });\r\n                if (datasourceList.length == 0) {\r\n                    delete $scope.modeling.channel;\r\n                }*/\r\n\r\n                //删除不存在的解析规则\r\n                let analyzerList = $scope.analyzers.filter(function (analyzer) {\r\n                    return analyzer.id == $scope.modeling.analyzer;\r\n\r\n                });\r\n                if (analyzerList.length == 0) {\r\n                    delete $scope.modeling.analyzer;\r\n                }\r\n\r\n                delete $scope.modeling.status;\r\n                //  delete $scope.modeling.id;\r\n                delete $scope.modeling.datatime;\r\n                setWriterForViewer(angular.copy($scope.modeling.sinks));\r\n                $edit_table.slideDown();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                delete $scope.myFile;\r\n                $scope.$apply();\r\n\r\n            };\r\n        })();\r\n        try {\r\n            reader.readAsText(file);\r\n        }\r\n        catch (e) {\r\n            $scope.message = {\r\n                status: '500',\r\n                message: '数据解析出错,你检查你的数据文件是否正确!'\r\n            };\r\n\r\n        }\r\n\r\n    };\r\n    $scope.show = function (clazz, id) {\r\n\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        let metric_table = $('.hla-widget-metric-table');\r\n        Util.resetFormValidateState($scope.ds_form);\r\n        switch (clazz) {\r\n            case 'upload':\r\n                delete  $scope.message;\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                metric_table.slideUp();\r\n                upload_table.slideToggle();\r\n                break;\r\n\r\n            case 'search':\r\n                delete  $scope.message;\r\n\r\n                $edit_table.slideUp();\r\n                $search_table.slideToggle();\r\n                metric_table.slideUp();\r\n                upload_table.slideUp();\r\n                break;\r\n            case 'add':\r\n                delete  $scope.message;\r\n                $edit_table.slideToggle();\r\n                $search_table.slideUp();\r\n                metric_table.slideUp();\r\n                upload_table.slideUp();\r\n                $scope.resetForm();\r\n                break;\r\n            case 'metric':\r\n                delete  $scope.message;\r\n                $scope.metrics(id);\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                metric_table.slideDown();\r\n                upload_table.slideUp();\r\n\r\n                break;\r\n            case 'edit':\r\n                delete  $scope.message;\r\n                Modeling.get({id: id}, function (ds) {\r\n                    $scope.modeling = ds;\r\n                    // console.log('$scope.modeling=' + JSON.stringify($scope.modeling));\r\n                    setWriterForViewer(angular.copy(ds.sinks));\r\n                    $scope.analyzeSel();\r\n                    /*\r\n                    $scope.querySourceType($scope.modeling.channel, function () {\r\n                        propertiesWithType();\r\n                        upload_table.slideUp();\r\n                        $edit_table.slideDown();\r\n                        metric_table.slideUp();\r\n                        $search_table.slideUp();\r\n                    })*/\r\n                    propertiesWithType();\r\n                    upload_table.slideUp();\r\n                    $edit_table.slideDown();\r\n                    metric_table.slideUp();\r\n                    $search_table.slideUp();\r\n                });\r\n\r\n                break;\r\n            case 'copy':\r\n                delete  $scope.message;\r\n                Modeling.get({id: id}, function (ds) {\r\n\r\n                    $scope.modeling = ds;\r\n                    $scope.modeling.name = $scope.modeling.name + '_copy';\r\n                    delete $scope.modeling.id;\r\n                    delete $scope.modeling.jobId;\r\n                    delete $scope.modeling.status;\r\n                    delete $scope.modeling.datatime;\r\n                    setWriterForViewer(angular.copy(ds.sinks));\r\n                    propertiesWithType();\r\n                    $edit_table.slideDown();\r\n                    $search_table.slideUp();\r\n                    metric_table.slideUp();\r\n                    upload_table.slideUp();\r\n                });\r\n\r\n                break;\r\n            case \"connectTest\":\r\n                $search_table.slideUp();\r\n                metric_table.slideUp();\r\n                upload_table.slideUp();\r\n                break;\r\n            default:\r\n                $edit_table.slideUp();\r\n                $search_table.slideUp();\r\n                metric_table.slideUp();\r\n                upload_table.slideUp();\r\n                break;\r\n        }\r\n\r\n    };\r\n    $scope.connectTest = function (valid) {\r\n        var workerId = $scope.modeling.worker;\r\n        var url = $scope.modeling.type.cluster;\r\n        if (valid) {\r\n            angular.element(\"#connect_test\").html('<i class=\"fa fa-spinner fa-spin\"></i>');\r\n            Modeling.connectTest({opt: 'check', workerId: workerId, url: url}, function (rt) {\r\n                $scope.message = rt;\r\n                angular.element(\"#connect_test\").html('测试连接');\r\n            }, function (error) {\r\n                var content = \"Connect to server has timed out, please try again later.\";\r\n                var message = {\r\n                    message: content\r\n                }\r\n                $scope.message = message;\r\n                angular.element(\"#connect_test\").html('测试连接');\r\n            });\r\n        }\r\n    }\r\n    $scope.operate = function (opt, id) {\r\n        Modeling.operate({opt: opt, id: id}, function (rt) {\r\n            $scope.message = rt;\r\n            $scope.reload();\r\n        }, function (error) {\r\n            var content = \"Connect to server has timed out, please try again later.\";\r\n            var message = {\r\n                message: content\r\n            }\r\n            $scope.message = message;\r\n        });\r\n    };\r\n\r\n    //删除按钮\r\n    $scope.delete = function (id) {\r\n        $scope.deleteId = id;\r\n        $confirmModal.modal('show');\r\n    };\r\n    //删除确定\r\n    $scope.confirm_yes = function () {\r\n        Modeling.delete({id: $scope.deleteId}, function (rt) {\r\n            $scope.message = rt;\r\n            $scope.reload();\r\n        });\r\n        $confirmModal.modal('hide');\r\n    };\r\n    $confirmModal.find('.op_yes').off().click(function () {\r\n        $scope.confirm_yes();\r\n    });\r\n    $scope.reload = function () {\r\n        $scope.list = Modeling.get($scope.page, function (pages) {\r\n            if (pages.result.length > 0) {\r\n                pages.result = pages.result.map(function (modeling) {\r\n                    return modeling;\r\n                });\r\n            }\r\n            else {\r\n                pages.result = [];\r\n            }\r\n        });\r\n    };\r\n    $scope.addHostPort = function () {\r\n        let listens = $scope.modeling.data.hostPorts;\r\n        if (!listens) {\r\n            listens = $scope.modeling.data.hostPorts = [];\r\n        }\r\n        listens.push(['', 9300]);\r\n    };\r\n    $scope.removeHostPort = function (index) {\r\n        $scope.modeling.data.hostPorts.splice(index, 1);\r\n    };\r\n\r\n    $scope.addHostEncoding = function () {\r\n        let listens = $scope.modeling.data.listens;\r\n        if (!listens) {\r\n            listens = $scope.modeling.data.listens = [];\r\n        }\r\n        listens.push(['', '']);\r\n    };\r\n    $scope.removeHostEncoding = function (index) {\r\n        $scope.modeling.data.listens.splice(index, 1);\r\n    };\r\n\r\n    //修复数据存储checkbox选中状态\r\n    function setWriterForViewer(sinks) {\r\n        if ($scope.sinks.$resolved) {\r\n            let tempWriters = new Array($scope.sinks.length);\r\n            if (sinks) {\r\n\r\n\r\n                for (let i = 0, j = sinks.length; i < j; i++) {\r\n                    let writer = sinks[i];\r\n                    if (writer) {\r\n                        let index = getIndex(writer);\r\n                        if (index.length == 2) {\r\n                            tempWriters[index[0]] = {id: index[1].id, name: index[1].name};\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            $scope.modeling.sinks = tempWriters;\r\n        }\r\n\r\n        function getIndex(id) {\r\n            let data = [];\r\n\r\n            for (let i = 0, j = $scope.sinks.length; i < j; i++) {\r\n                if ($scope.sinks[i].id == id) {\r\n                    data = [i, $scope.sinks[i]];\r\n                    break;\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n\r\n    //移除数据存储null值\r\n    function setForSave(sinks) {\r\n        return (sinks || []).filter(function (sink) {\r\n            return sink != null && sink != undefined;\r\n        }).map(function (sink) {\r\n            return sink.id;\r\n        });\r\n    }\r\n\r\n    $scope.downloadFile = function (itemId) {\r\n        Modeling.download({id: itemId}, function (response) {\r\n            let fileName = '数据建模配置';\r\n            fileName = decodeURI(fileName);\r\n            let url = URL.createObjectURL(new Blob([response.data]));\r\n            let a = document.createElement('a');\r\n            document.body.appendChild(a); //此处增加了将创建的添加到body当中\r\n            a.href = url;\r\n            a.download = fileName + '-' + itemId + '.json';\r\n            a.target = '_blank';\r\n            a.click();\r\n            a.remove(); //将a标签移除\r\n        }, function (response) {\r\n//            console.log(response);\r\n        });\r\n    }\r\n\r\n    // 查询数据源类型\r\n    $scope.querySourceType = function (sourceId, callback) {\r\n        if ((typeof sourceId != \"undefined\") && (typeof sourceId.valueOf() == \"string\") && (sourceId.length > 0)) {\r\n            DataSource.get({id: sourceId}, function (ds) {\r\n                $scope.modeling.sourceType = ds.data.name;\r\n                // console.log('ds=' + JSON.stringify(ds));\r\n                // console.log('$scope.modeling.sourceType=' + $scope.modeling.sourceType);\r\n                callback();\r\n            });\r\n        }\r\n        else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    // 数据源选择事件\r\n    $scope.changeDataSource = function (channelId) {\r\n        $scope.querySourceType(channelId, function () {\r\n            /*$('.hla-widget-upload-table').slideUp();\r\n             $('.hla-widget-add-table').slideDown();\r\n             $('.hla-widget-metric-table').slideUp();\r\n             $('.hla-widget-search-table').slideUp();*/\r\n        });\r\n    }\r\n\r\n    function propertiesWithType() {\r\n        let reg = /^(true)|(false)|\\d+$/;\r\n        for (let item in $scope.modeling.properties) {\r\n            let v = $scope.modeling.properties[item];\r\n            if (v && reg.test(v)) {\r\n                $scope.modeling.properties[item] = eval(v)\r\n            }\r\n        }\r\n    }\r\n\r\n    $scope.typeChange = function () {\r\n        //分析规则\r\n        // console.log($scope.modeling.type+\"====================\" +$scope.type)\r\n        Analyzer.queryByType({type: $scope.modeling.type.name}, function (rt) {\r\n            $scope.analyzers = rt;\r\n        })\r\n    }\r\n});\r\n"]}