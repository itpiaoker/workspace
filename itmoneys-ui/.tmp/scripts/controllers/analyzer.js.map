{"version":3,"sources":["controllers/analyzer.js"],"names":["app","controller","$scope","$rootScope","$location","Modeling","DataSource","Analyzer","Util","aceLoaded","_editor","aceValue","aceChanged","e","previewData","channels","byType","type","analyzers","query","modelings","queryByType","addProperty","rule","channel","data","fromFields","push","confirm","title","message","ok","$","modal","cancel","deleteProperty","index","splice","addHashField","cols","deleteHashField","channelChange","resolver","filter","r","id","shift","timefields","properties","changeFieldName","fieldName","p","key","changeVecFiledName","addFilter","name","cases","addCase","length","removeFilter","removeCase","findex","caseChange","fIndex","ref","validateForm","formValid","$valid","$submitted","saveRule","save","rt","status","reload","show","slideUp","showPreview","preview","list","get","page","clazz","edit","search","upload_table","searchDataSourceForm","slideDown","timeSeriesModel","modelType","timeCharacteristic","maxOutOfOrderness","resetFormValidateState","add_form","slideToggle","downloadFile","sqlItemId","download","response","fileName","decodeURI","url","URL","createObjectURL","Blob","a","document","createElement","body","appendChild","href","target","click","remove","uploadFile","$edit_table","$search_table","file","myFile","reader","FileReader","onloadend","angular","fromJson","result","flag","$apply","readAsText","validateSql","sql","toUpperCase","indexOf","delete","delete_id","confirm_yes","find","off","typeChange","console","log"],"mappings":"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","file":"analyzer.js","sourcesContent":["'use strict';\r\n\r\napp.controller('AnalyzerController', function ($scope, $rootScope, $location, Modeling, DataSource, Analyzer, Util) {\r\n\r\n    $scope.aceLoaded = function (_editor) {\r\n        // Options\r\n        //_editor.setReadOnly(true);\r\n    };\r\n    $scope.aceValue = 'Foobar';\r\n    $scope.aceChanged = function (e) {\r\n        //\r\n    };\r\n\r\n    $scope.previewData = {};\r\n    //解析规则\r\n    $scope.channels = DataSource.byType({type: \"channel\"});\r\n    //分析规则\r\n    $scope.analyzers = Analyzer.query();\r\n    //数据模型\r\n    $scope.modelings = Modeling.queryByType({type: 'model'});\r\n    /**\r\n     * 构造 字段属性\r\n     */\r\n    $scope.addProperty = function () {\r\n        if ($scope.rule.channel) {\r\n            if (!$scope.rule.data.fromFields) {\r\n                $scope.rule.data.fromFields = [];\r\n            }\r\n            $scope.rule.data.fromFields.push(['', 'string']);\r\n\r\n        } else {\r\n            $scope.confirm = {\r\n                title: '提示',\r\n                message: \"您未选择解析规则，确认添加字段么？\",\r\n                ok: function () {\r\n                    $scope.rule.data.fromFields.push(['', 'string']);\r\n                    $('#commonConfirmModal').modal('hide');\r\n                },\r\n                cancel: function () {\r\n                    $('#commonConfirmModal').modal('hide');\r\n                }\r\n            };\r\n            $('#commonConfirmModal').modal('show');\r\n        }\r\n\r\n    };\r\n    /**\r\n     * 删除字段属性\r\n     * @param index\r\n     */\r\n    $scope.deleteProperty = function (index) {\r\n        $scope.rule.data.fromFields.splice(index, 1);\r\n    };\r\n\r\n    $scope.addHashField = function () {\r\n        if (!$scope.rule.data.cols) {\r\n            $scope.rule.data.cols = [];\r\n        }\r\n        $scope.rule.data.cols.push(['', 'null', '', 'null']);\r\n    };\r\n\r\n    $scope.deleteHashField = function (index) {\r\n        $scope.rule.data.cols.splice(index, 1);\r\n    };\r\n\r\n    $scope.channelChange = function () {\r\n        $scope.resolver = $scope.channels.filter(r => r.id === $scope.rule.channel).shift();\r\n        $scope.timefields = $scope.resolver.properties.filter(r => (r.type === 'datetime' || r.type === 'long'));\r\n    };\r\n\r\n    $scope.changeFieldName = function (index) {\r\n        let fieldName = $scope.rule.data.fromFields[index][0];\r\n        if ($scope.resolver && $scope.resolver.properties) {\r\n            let p = $scope.resolver.properties.filter(p => p.key === fieldName).shift();\r\n            if (p) {\r\n                $scope.rule.data.fromFields[index][1] = p.type;\r\n            }\r\n        }\r\n    };\r\n    $scope.changeVecFiledName = function (index) {\r\n        let fieldName = $scope.rule.data.cols[index][0];\r\n        if ($scope.resolver && $scope.resolver.properties) {\r\n            let p = $scope.resolver.properties.filter(p => p.key === fieldName).shift();\r\n            if (p) {\r\n                if (p.type == 'string') {\r\n                    $scope.rule.data.cols[index][1] = \"simhash\";\r\n                } else if (p.type == \"integer\" || p.type == \"long\" || p.type == \"float\" || p.type == \"double\") {\r\n                    $scope.rule.data.cols[index][1] = \"null\";\r\n                } else {\r\n                    $scope.confirm = {\r\n                        title: \"错误\",\r\n                        message: \"字段[\" + fieldName + \"]类型为[\" + p.type + \"],不可参与向量化\",\r\n                        ok: function () {\r\n                            $scope.rule.data.cols[index][0] = \"\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    $scope.addFilter = function () {\r\n        if (!$scope.rule.data.filter) {\r\n            $scope.rule.data.filter = []\r\n        }\r\n        $scope.rule.data.filter.push({\r\n            name: 'streamRedirect',\r\n            cases: []\r\n        });\r\n        $scope.addCase($scope.rule.data.filter.length - 1);\r\n    };\r\n    $scope.removeFilter = function (index) {\r\n        $scope.rule.data.filter.splice(index, 1);\r\n    };\r\n    $scope.addCase = function (index) {\r\n        if (!$scope.rule.data.filter[index].cases) {\r\n            $scope.rule.data.filter[index].cases = []\r\n        }\r\n        $scope.rule.data.filter[index].cases.push({\r\n            name: 'streamCase',\r\n            rule: {\r\n                name: 'streamAnalyzer'\r\n            }\r\n        })\r\n    };\r\n\r\n    $scope.removeCase = function (findex, index) {\r\n        $scope.rule.data.filter[findex].cases.splice(index, 1);\r\n    };\r\n    $scope.caseChange = function (fIndex, index) {\r\n        delete $scope.rule.data.filter[fIndex].cases[index].rule.ref\r\n    };\r\n\r\n    $scope.validateForm = function (formValid) {\r\n        if (!formValid) return false;\r\n        if (!formValid.$valid) {\r\n            return false;\r\n        }\r\n        if (!formValid.$submitted) {\r\n            formValid.$submitted = true;\r\n        }\r\n        /*if ($scope.rule.data.name === 'sql') {\r\n            $scope.resolver = $scope.channels.filter(p => p.id === $scope.rule.channel).shift();\r\n            if (!$scope.resolver) {\r\n                $scope.message = {\r\n                    status: '500',\r\n                    title: '错误！',\r\n                    message: '数据一致性错误，请重新选择解析规则'\r\n                };\r\n                return false;\r\n            }\r\n            if ($scope.rule.data.fromFields.length == 0) {\r\n                return false;\r\n            }\r\n            if (!$scope.validateSql()) {\r\n                return false;\r\n            }\r\n        }*/\r\n        return true;\r\n    };\r\n\r\n    $scope.saveRule = function (formValid) {\r\n        if (!$scope.validateForm(formValid)) {\r\n            return;\r\n        }\r\n        /*if ($scope.rule.data.timeCharacteristic == 'ProcessingTime' && $scope.rule.data.name == 'sql') {\r\n            $scope.rule.data.timeField = null;\r\n            $scope.rule.data.maxOutOfOrderness = null;\r\n        }*/\r\n        Analyzer.save($scope.rule,\r\n            function (rt) {\r\n                $scope.message = rt;\r\n                if ($scope.message.status == '200') {\r\n                    $scope.reload();\r\n                    $scope.show();\r\n                    $('.hla-widget-add-table').slideUp();\r\n                    $scope.reload();\r\n                }\r\n            });\r\n    };\r\n    $scope.showPreview = false;\r\n    //预览函数\r\n    $scope.preview = function (formValid) {\r\n        //校验字段开始\r\n        delete $scope.message;\r\n        /*if ($scope.rule.data.name == 'sql') {\r\n            let keys = $scope.resolver.properties.map(k => k.key);//解析规则中的key\r\n            let fields = [];\r\n            $scope.rule.data.fromFields.forEach(f => {\r\n                if (!keys.includes(f[0])) {\r\n                    fields.push(f[0]);\r\n                }\r\n            });\r\n            if (fields.length > 0) {\r\n                $scope.message = {\r\n                    status: '400',\r\n                    title: \"警告！\",\r\n                    message: '解析规则[' + $scope.resolver.name + ']中不存在字段[' + fields.join(\",\") + '],请确认配置是否正确'\r\n                };\r\n            }\r\n            if ($scope.timefields && $scope.rule.data.timeField) {\r\n                let timefield = $scope.timefields.filter(t => t.key === $scope.rule.data.timeField).shift();\r\n                if (!timefield) {\r\n                    let message = '解析规则[' + $scope.resolver.name + ']中不存在您填写的时间字段[' + $scope.rule.data.timeField + ']，请确认字段是否为时间类型'\r\n                    if ($scope.message) {\r\n                        message = '（1）' + $scope.message.message + '；（2）' + message;\r\n                    }\r\n                    $scope.message = {\r\n                        status: '400',\r\n                        title: \"警告！\",\r\n                        message: message\r\n                    };\r\n\r\n                }\r\n            }\r\n            //校验字段结束\r\n\r\n        }*/\r\n\r\n\r\n        if (!$scope.validateForm(formValid)) {\r\n            return;\r\n        }\r\n        Analyzer.preview($scope.rule, function (data) {\r\n            if (data.status && data.status == 500) {\r\n                $scope.message = {\r\n                    status: '500',\r\n                    title: '错误！',\r\n                    message: data.message\r\n                };\r\n            } else {\r\n                // delete $scope.message;\r\n                $scope.previewData = data;\r\n                $scope.showPreview = true;\r\n            }\r\n        });\r\n    };\r\n    $scope.reload = function () {\r\n        $scope.list = {};\r\n        $scope.list = Analyzer.get($scope.page);\r\n    };\r\n    //\r\n    $scope.show = function (clazz, id) {\r\n        let edit = $('.hla-widget-add-table');\r\n        let search = $('.hla-widget-search-table');\r\n        let list = $('.hla-widget-data-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        switch (clazz) {\r\n            case 'upload':\r\n                delete $scope.message;\r\n                $scope.searchDataSourceForm = {};\r\n                edit.slideUp();\r\n                search.slideUp();\r\n                upload_table.slideDown();\r\n                break;\r\n\r\n            case 'add':\r\n                delete $scope.message;\r\n                $scope.rule = {\r\n                    name: '',\r\n                    data: {\r\n                        name: 'sql',\r\n                        timeSeriesModel: {\r\n                            modelType: 'ADDITIVE'\r\n                        },\r\n                        timeCharacteristic: 'ProcessingTime',\r\n                        maxOutOfOrderness: 10000,\r\n                        fromFields: []\r\n                    }\r\n                };\r\n                //TODO get form data\r\n                Util.resetFormValidateState($scope.add_form);\r\n                edit.slideToggle();\r\n                search.slideUp();\r\n                list.slideToggle();\r\n                upload_table.slideUp();\r\n                break;\r\n            case 'edit':\r\n                delete $scope.message;\r\n                Analyzer.get({id: id}, function (data) {\r\n                    if (data.data && data.channel) {\r\n                        $scope.resolver = $scope.channels.filter(p => p.id === data.channel).shift();\r\n                        if ($scope.resolver && $scope.resolver.properties) {\r\n                            $scope.timefields = $scope.resolver.properties.filter(r => (r.type === 'datetime' || r.type === 'long'));\r\n                        }\r\n                    }\r\n                    $scope.rule = data;\r\n                });\r\n                Util.resetFormValidateState($scope.add_form);\r\n                edit.slideDown();\r\n                search.slideUp();\r\n                upload_table.slideUp();\r\n                list.slideUp();\r\n                break;\r\n            case 'copy':\r\n                delete $scope.message;\r\n                Analyzer.get({id: id}, function (data) {\r\n                    $scope.rule = data;\r\n                    delete $scope.rule.id;\r\n                    $scope.rule.name = $scope.rule.name + '_copy';\r\n                    $scope.resolver = $scope.channels.filter(r => r.id === $scope.rule.channel).shift();\r\n                    if ($scope.resolver) {\r\n                        $scope.timefields = $scope.resolver.properties.filter(r => (r.type === 'datetime' || r.type === 'long'));\r\n                    }\r\n//                    $scope.fromRule();\r\n                });\r\n                Util.resetFormValidateState($scope.add_form);\r\n                edit.slideDown();\r\n                search.slideUp();\r\n                upload_table.slideUp();\r\n                list.slideUp();\r\n                break;\r\n            case 'search':\r\n                delete $scope.message;\r\n                edit.slideUp();\r\n                search.slideToggle();\r\n                upload_table.slideUp();\r\n                list.slideDown();\r\n                $scope.page.search = {};\r\n                $scope.page.search.name = null;\r\n                break;\r\n            default:\r\n                edit.slideUp();\r\n                search.slideUp();\r\n                upload_table.slideUp();\r\n                list.slideDown();\r\n        }\r\n    };//\r\n\r\n    $scope.downloadFile = function (sqlItemId) {\r\n\r\n//        console.log(sqlItemId);\r\n\r\n        Analyzer.download({id: sqlItemId}, function (response) {\r\n            let fileName = 'streamSql分析规则';\r\n            fileName = decodeURI(fileName);\r\n            let url = URL.createObjectURL(new Blob([response.data]));\r\n            let a = document.createElement('a');\r\n            document.body.appendChild(a); //此处增加了将创建的添加到body当中\r\n            a.href = url;\r\n            a.download = fileName + '-' + sqlItemId + '.json';\r\n            a.target = '_blank';\r\n            a.click();\r\n            a.remove(); //将a标签移除\r\n        }, function (response) {\r\n//            console.log(response);\r\n        });\r\n    };\r\n\r\n    $scope.uploadFile = function () {\r\n        delete $scope.message;\r\n        let $edit_table = $('.hla-widget-add-table');\r\n        let $search_table = $('.hla-widget-search-table');\r\n        let upload_table = $('.hla-widget-upload-table');\r\n        let list = $('.hla-widget-data-table');\r\n        let file = $scope.myFile;\r\n        let reader = new FileReader();\r\n        reader.onloadend = function (e) {\r\n//            console.log(this.result);\r\n            $scope.rule = angular.fromJson(this.result);\r\n\r\n            try {\r\n                //  delete    $scope.rule.id;\r\n                let flag = false;\r\n\r\n//                $scope.fromRule();\r\n                $edit_table.slideDown();\r\n                $search_table.slideUp();\r\n                upload_table.slideUp();\r\n                list.slideUp();\r\n                delete $scope.myFile;\r\n//                console.log(fileInput);\r\n                $scope.$apply();\r\n            } catch (e) {\r\n//                console.log(e);\r\n                $scope.message = {\r\n                    status: '500',\r\n                    title: '错误！',\r\n                    message: '数据解析出错,你检查你的数据文件是否是正确的解析规则内容!'\r\n                };\r\n            }\r\n        };\r\n\r\n        try {\r\n            reader.readAsText(file);\r\n        } catch (e) {\r\n            $scope.message = {\r\n                status: '500',\r\n                title: '错误！',\r\n                message: '数据解析出错,你检查你的数据文件是否正确!'\r\n            };\r\n\r\n        }\r\n\r\n\r\n    };//\r\n\r\n\r\n    $scope.validateSql = function () {\r\n        let sql = $scope.rule.data.sql;\r\n        if (sql) {\r\n            sql = sql.toUpperCase();\r\n            if (sql.indexOf(\"SELECT\") == -1 || sql.indexOf(\"FROM\") == -1) {\r\n                $scope.message = {\r\n                    status: '500',\r\n                    title: '错误！',\r\n                    message: \"SQL语句不合法，请填写正确的SQL\"\r\n                };\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n\r\n    $scope.delete = function (id) {\r\n        $scope.delete_id = id;\r\n        $('#confirmModal').modal('show');\r\n    };\r\n    //删除确定\r\n    $scope.confirm_yes = function () {\r\n\r\n        Analyzer.delete({id: $scope.delete_id}, function (data) {\r\n            $scope.message = data;\r\n            $('#confirmModal').modal('hide');\r\n            $scope.reload();\r\n        });\r\n\r\n\r\n    };\r\n    $('#confirmModal').find('.op_yes').off().click(function () {\r\n        $scope.confirm_yes();\r\n    });\r\n\r\n    $scope.typeChange = function () {\r\n        //分析规则\r\n        console.log($scope.rule.type + \"====================\" + $scope.type)\r\n        Modeling.queryByType({type: $scope.rule.type}, function (rt) {\r\n            $scope.modelings = rt;\r\n        })\r\n    }\r\n});"]}