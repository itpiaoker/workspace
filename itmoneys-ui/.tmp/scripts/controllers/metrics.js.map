{"version":3,"sources":["controllers/metrics.js"],"names":["app","controller","$scope","Metrics","DataSource","options","chart","type","height","margin","top","right","bottom","left","x","d","d3","time","format","parse","y","useInteractiveGuideline","dispatch","stateChange","e","console","log","changeState","tooltipShow","tooltipHide","xAxis","axisLabel","tickFormat","Date","yAxis","axisLabelDistance","callback","title","enable","text","subtitle","css","caption","html","setInterval","data","get","configs","now","to","from","getTime","result","forEach","config","query","collector","collectorId","id","metrics","mrsts","status","metric","metricType","datetime","Number","split","push","length","key","name","values"],"mappings":"AAAA;;AAEAA,IAAIC,WAAW,yDAAqB,UAAUC,QAAQC,SAASC,YAAY;IACvEF,OAAOG,UAAU;QACbC,OAAO;YACHC,MAAM;YACNC,QAAQ;YACRC,QAAQ;gBACJC,KAAK;gBACLC,OAAO;gBACPC,QAAQ;gBACRC,MAAM;;YAEVC,GAAG,SAAA,EAAUC,GAAG;gBACZ,OAAOC,GAAGC,KAAKC,OAAO,wBAAwBC,MAAMJ,EAAED;;YAE1DM,GAAG,SAAA,EAAUL,GAAG;gBACZ,OAAOA,EAAEK;;YAEbC,yBAAyB;YACzBC,UAAU;gBACNC,aAAa,SAAA,YAAUC,GAAG;oBACtBC,QAAQC,IAAI;;gBAEhBC,aAAa,SAAA,YAAUH,GAAG;oBACtBC,QAAQC,IAAI;;gBAEhBE,aAAa,SAAA,YAAUJ,GAAG;oBACtBC,QAAQC,IAAI;;gBAEhBG,aAAa,SAAA,YAAUL,GAAG;oBACtBC,QAAQC,IAAI;;;YAGpBI,OAAO;gBACHC,WAAW;gBACXC,YAAY,SAAA,WAAUjB,GAAG;oBACrB,OAAOC,GAAGC,KAAKC,OAAO,YAAY,IAAIe,KAAKlB;;;YAGnDmB,OAAO;gBACHH,WAAW;gBACXC,YAAY,SAAA,WAAUjB,GAAG;oBACrB,OAAOA;;gBAEXoB,mBAAmB,CAAC;;YAExBC,UAAU,SAAA,SAAU9B,OAAO;gBACvBmB,QAAQC,IAAI;;;QAGpBW,OAAO;YACHC,QAAQ;YACRC,MAAM;;QAEVC,UAAU;YACNF,QAAQ;YACRC,MAAM;YACNE,KAAK;gBACD,cAAc;gBACd,UAAU;;;QAGlBC,SAAS;YACLC,MAAM;YACNL,QAAQ;YACRG,KAAK;gBACD,cAAc;gBACd,UAAU;;;;IAItBG,YAAY,YAAY;QACpB1C,OAAO2C,OAAO;QACdzC,WAAW0C,IAAI,IAAI,UAAUC,SAAS;YAClC,IAAIC,MAAM,IAAIf;YACd,IAAIgB,KAAKjC,GAAGC,KAAKC,OAAO,wBAAwB8B;YAChD,IAAIE,OAAOlC,GAAGC,KAAKC,OAAO,wBAAwB,IAAIe,KAAKe,IAAIG,YAAY,KAAK,OAAO;YACvF1B,QAAQC,IAAIwB;YACZzB,QAAQC,IAAIuB;YACZF,QAAQK,OAAOC,QAAQ,UAAUC,QAAQ;;gBAErCnD,QAAQoD,MAAM,EAACC,WAAWF,OAAOG,aAAaC,IAAIJ,OAAOI,IAAIR,MAAMA,MAAMD,IAAIA,MAAK,UAAUU,SAAS;oBACjG,IAAIC,QAAQ;oBACZ,IAAI,CAACD,QAAQE,QAAQ;wBACjBF,QAAQN,QAAQ,UAAUS,QAAQ;4BAC9B,IAAIA,OAAOC,eAAe,UAAU;gCAChC,IAAIhD,IAAI;oCACJD,GAAGgD,OAAOE;oCACV5C,GAAG6C,OAAOH,OAAOA,OAAO,aAAaI,MAAM,KAAK;;;gCAGpDN,MAAMO,KAAKpD;;;wBAInB,IAAI6C,MAAMQ,SAAS,GAAG;4BAClBlE,OAAO2C,KAAKsB,KAAK;gCACbE,KAAKf,OAAOgB;gCACZC,QAAQX;;;;;;;;OAUjC;IA3GP","file":"metrics.js","sourcesContent":["'use strict';\r\n\r\napp.controller('MetricsController', function ($scope, Metrics, DataSource) {\r\n    $scope.options = {\r\n        chart: {\r\n            type: 'lineChart',\r\n            height: 450,\r\n            margin: {\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 40,\r\n                left: 55\r\n            },\r\n            x: function (d) {\r\n                return d3.time.format('%Y-%m-%d %H:%M:%S.%L').parse(d.x);\r\n            },\r\n            y: function (d) {\r\n                return d.y;\r\n            },\r\n            useInteractiveGuideline: true,\r\n            dispatch: {\r\n                stateChange: function (e) {\r\n                    console.log('stateChange');\r\n                },\r\n                changeState: function (e) {\r\n                    console.log('changeState');\r\n                },\r\n                tooltipShow: function (e) {\r\n                    console.log('tooltipShow');\r\n                },\r\n                tooltipHide: function (e) {\r\n                    console.log('tooltipHide');\r\n                }\r\n            },\r\n            xAxis: {\r\n                axisLabel: '时间(ms)',\r\n                tickFormat: function (d) {\r\n                    return d3.time.format('%H:%M:%S')(new Date(d))\r\n                }\r\n            },\r\n            yAxis: {\r\n                axisLabel: '条数/秒',\r\n                tickFormat: function (d) {\r\n                    return d;\r\n                },\r\n                axisLabelDistance: -10\r\n            },\r\n            callback: function (chart) {\r\n                console.log('!!! lineChart callback !!!');\r\n            }\r\n        },\r\n        title: {\r\n            enable: true,\r\n            text: '采集进度'\r\n        },\r\n        subtitle: {\r\n            enable: true,\r\n            text: '显示每一个采集器,不同数据源的数据收集情况',\r\n            css: {\r\n                'text-align': 'center',\r\n                'margin': '10px 13px 0px 7px'\r\n            }\r\n        },\r\n        caption: {\r\n            html: '<b>1.</b> X轴标示采集的数据条数, <span style=\\'text-decoration: underline;\\'>EPS</span>,<i>Cum in purto erat, mea ne nominavi persecuti reformidans.</i> Docendi blandit abhorreant ea has, minim tantas alterum pro eu. <span style=\\'color: darkred;\\'>Exerci graeci ad vix, elit tacimates ea duo</span>. Id mel eruditi fuisset. Stet vidit patrioque in pro, eum ex veri verterem abhorreant, id unum oportere intellegam nec<sup>[1, <a href=\\'https://github.com/krispo/angular-nvd3\\' target=\\'_blank\\'>2</a>, 3]</sup>.',\r\n            enable: true,\r\n            css: {\r\n                'text-align': 'justify',\r\n                'margin': '10px 13px 0px 7px'\r\n            }\r\n        }\r\n    };\r\n    setInterval(function () {\r\n        $scope.data = [];\r\n        DataSource.get({}, function (configs) {\r\n            let now = new Date();\r\n            let to = d3.time.format('%Y-%m-%d %H:%M:%S.%L')(now);\r\n            let from = d3.time.format('%Y-%m-%d %H:%M:%S.%L')(new Date(now.getTime() - 12 * 3600 * 1000));\r\n            console.log(from);\r\n            console.log(to);\r\n            configs.result.forEach(function (config) {\r\n\r\n                Metrics.query({collector: config.collectorId, id: config.id, from: from, to: to}, function (metrics) {\r\n                    let mrsts = [];\r\n                    if (!metrics.status) {\r\n                        metrics.forEach(function (metric) {\r\n                            if (metric.metricType === 'METERS') {\r\n                                let d = {\r\n                                    x: metric.datetime,\r\n                                    y: Number(metric.metric['mean rate'].split(' ')[0])\r\n                                };\r\n\r\n                                mrsts.push(d);\r\n                            }\r\n\r\n                        });\r\n                        if (mrsts.length > 0) {\r\n                            $scope.data.push({\r\n                                key: config.name,\r\n                                values: mrsts\r\n                            });\r\n\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n            //    $scope.$apply();\r\n\r\n        });\r\n    }, 10000);\r\n\r\n});\r\n"]}